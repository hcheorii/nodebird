{"ast":null,"code":"import { applyMiddleware, createStore, compose } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { createWrapper } from \"next-redux-wrapper\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport reducer from \"../reducers\";\nimport rootSaga from \"../sagas\";\nvar configureStore = function configureStore(context) {\n  console.log(context);\n  var sagaMiddleware = createSagaMiddleware();\n  var middlewares = [sagaMiddleware];\n  var enhancer = false ? compose(applyMiddleware.apply(void 0, middlewares)) : composeWithDevTools(applyMiddleware.apply(void 0, middlewares));\n  var store = createStore(reducer, enhancer);\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  return store;\n};\nvar wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"names":["applyMiddleware","createStore","compose","createSagaMiddleware","createWrapper","composeWithDevTools","reducer","rootSaga","configureStore","context","console","log","sagaMiddleware","middlewares","enhancer","apply","store","sagaTask","run","wrapper","debug"],"sources":["/Users/ihyeoncheol/Desktop/nodebird_project/prepare/front/store/configureStore.js"],"sourcesContent":["import { applyMiddleware, createStore, compose } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { createWrapper } from \"next-redux-wrapper\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nimport reducer from \"../reducers\";\nimport rootSaga from \"../sagas\";\n\nconst configureStore = (context) => {\n    console.log(context);\n    const sagaMiddleware = createSagaMiddleware();\n    const middlewares = [sagaMiddleware];\n    const enhancer =\n        process.env.NODE_ENV === \"production\"\n            ? compose(applyMiddleware(...middlewares))\n            : composeWithDevTools(applyMiddleware(...middlewares));\n    const store = createStore(reducer, enhancer);\n    store.sagaTask = sagaMiddleware.run(rootSaga);\n    return store;\n};\n\nconst wrapper = createWrapper(configureStore, {\n    debug: process.env.NODE_ENV === \"development\",\n});\n\nexport default wrapper;\n"],"mappings":"AAAA,SAASA,eAAe,EAAEC,WAAW,EAAEC,OAAO,QAAQ,OAAO;AAC7D,OAAOC,oBAAoB,MAAM,YAAY;AAC7C,SAASC,aAAa,QAAQ,oBAAoB;AAClD,SAASC,mBAAmB,QAAQ,0BAA0B;AAE9D,OAAOC,OAAO,MAAM,aAAa;AACjC,OAAOC,QAAQ,MAAM,UAAU;AAE/B,IAAMC,cAAc,GAAG,SAAjBA,cAAcA,CAAIC,OAAO,EAAK;EAChCC,OAAO,CAACC,GAAG,CAACF,OAAO,CAAC;EACpB,IAAMG,cAAc,GAAGT,oBAAoB,CAAC,CAAC;EAC7C,IAAMU,WAAW,GAAG,CAACD,cAAc,CAAC;EACpC,IAAME,QAAQ,GACV,QACMZ,OAAO,CAACF,eAAe,CAAAe,KAAA,SAAIF,WAAW,CAAC,CAAC,GACxCR,mBAAmB,CAACL,eAAe,CAAAe,KAAA,SAAIF,WAAW,CAAC,CAAC;EAC9D,IAAMG,KAAK,GAAGf,WAAW,CAACK,OAAO,EAAEQ,QAAQ,CAAC;EAC5CE,KAAK,CAACC,QAAQ,GAAGL,cAAc,CAACM,GAAG,CAACX,QAAQ,CAAC;EAC7C,OAAOS,KAAK;AAChB,CAAC;AAED,IAAMG,OAAO,GAAGf,aAAa,CAACI,cAAc,EAAE;EAC1CY,KAAK;AACT,CAAC,CAAC;AAEF,eAAeD,OAAO"},"metadata":{},"sourceType":"module"}