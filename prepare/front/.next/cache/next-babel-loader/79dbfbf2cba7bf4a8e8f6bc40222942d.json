{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"/Users/ihyeoncheol/Desktop/nodebird_project/prepare/front/components/PostForm.js\",\n  _s = $RefreshSig$();\nvar __jsx = React.createElement;\nimport { Form, Input, Button } from \"antd\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport React, { useCallback, useRef, useEffect } from \"react\";\nimport { ADD_POST_REQUEST } from \"../reducers/post\";\nimport useInput from \"../hooks/useInput\";\nimport addPost from \"../reducers/post\";\nvar PostForm = function PostForm() {\n  _s();\n  var dispatch = useDispatch();\n  var _useInput = useInput(\"\"),\n    _useInput2 = _slicedToArray(_useInput, 3),\n    text = _useInput2[0],\n    onChangeText = _useInput2[1],\n    setText = _useInput2[2];\n  var _useSelector = useSelector(function (state) {\n      return state.post;\n    }),\n    imagePaths = _useSelector.imagePaths,\n    addPostDone = _useSelector.addPostDone,\n    addPostloading = _useSelector.addPostloading;\n  var imageInput = useRef();\n  //ref는 실제DOM에 접근하기 위해서 사용\n\n  useEffect(function () {\n    if (addPostDone) {\n      setText(\"\");\n    }\n  }, [addPostDone]);\n  var onSubmit = useCallback(function () {\n    dispatch({\n      type: ADD_POST_REQUEST,\n      data: text\n    });\n    // setText(\"\"); //여기서 이렇게 초기화해줄 경우에 서버쪽에서 응답으로 오류가 났을때 게시물이 잘 올라가지 않았음에도 초기화되어버림.\n    //그래서 위에 useEffect부분을 따로 작성해줌.\n    // dispatch(addPost(text));\n  }, [text]);\n  var onClickImageUpload = useCallback(function () {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  return __jsx(Form, {\n    style: {\n      margin: \"10px 0 20px\"\n    },\n    encType: \"multipart/form-data\" //이미지의 형식. 비디오도 대부분 이 형식을 따름\n    ,\n    onFinish: onSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, __jsx(Input.TextArea, {\n    value: text,\n    onChange: onChangeText,\n    maxLength: 140,\n    placeholder: \"\\uC5B4\\uB5A4 \\uC2E0\\uAE30\\uD55C \\uC77C\\uC774 \\uC788\\uC5C8\\uB098\\uC694?\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    type: \"file\",\n    name: \"image\",\n    multiple: true,\n    hidden: true,\n    ref: imageInput,\n    onChange: onChangeImages,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }), __jsx(Button, {\n    onClick: onClickImageUpload,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"), __jsx(Button, {\n    type: \"primary\",\n    style: {\n      \"float\": \"right\"\n    },\n    htmlType: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, \"\\uC9F9\\uC9F9\")), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, imagePaths.map(function (v) {\n    __jsx(\"div\", {\n      key: v,\n      style: {\n        display: \"inline-block\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }\n    }, __jsx(\"img\", {\n      src: v,\n      style: {\n        width: \"200px\"\n      },\n      alt: v,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 25\n      }\n    }));\n  })));\n};\n_s(PostForm, \"QJ/9nrLSMHhPwvpcrDTDkVUBp8o=\", false, function () {\n  return [useDispatch, useInput, useSelector];\n});\n_c = PostForm;\nexport default PostForm;\nvar _c;\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"names":["Form","Input","Button","useSelector","useDispatch","React","useCallback","useRef","useEffect","ADD_POST_REQUEST","useInput","addPost","PostForm","_s","dispatch","_useInput","_useInput2","_slicedToArray","text","onChangeText","setText","_useSelector","state","post","imagePaths","addPostDone","addPostloading","imageInput","onSubmit","type","data","onClickImageUpload","current","click","__jsx","style","margin","encType","onFinish","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","TextArea","value","onChange","maxLength","placeholder","name","multiple","hidden","ref","onChangeImages","onClick","htmlType","map","v","key","display","src","width","alt","_c","$RefreshReg$"],"sources":["/Users/ihyeoncheol/Desktop/nodebird_project/prepare/front/components/PostForm.js"],"sourcesContent":["import { Form, Input, Button } from \"antd\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport React, { useCallback, useRef, useEffect } from \"react\";\nimport { ADD_POST_REQUEST } from \"../reducers/post\";\nimport useInput from \"../hooks/useInput\";\nimport addPost from \"../reducers/post\";\nconst PostForm = () => {\n    const dispatch = useDispatch();\n    const [text, onChangeText, setText] = useInput(\"\");\n    const { imagePaths, addPostDone, addPostloading } = useSelector(\n        (state) => state.post\n    );\n\n    const imageInput = useRef();\n    //ref는 실제DOM에 접근하기 위해서 사용\n\n    useEffect(() => {\n        if (addPostDone) {\n            setText(\"\");\n        }\n    }, [addPostDone]);\n\n    const onSubmit = useCallback(() => {\n        dispatch({\n            type: ADD_POST_REQUEST,\n            data: text,\n        });\n        // setText(\"\"); //여기서 이렇게 초기화해줄 경우에 서버쪽에서 응답으로 오류가 났을때 게시물이 잘 올라가지 않았음에도 초기화되어버림.\n        //그래서 위에 useEffect부분을 따로 작성해줌.\n        // dispatch(addPost(text));\n    }, [text]);\n\n    const onClickImageUpload = useCallback(() => {\n        imageInput.current.click();\n    }, [imageInput.current]);\n\n    return (\n        <Form\n            style={{ margin: \"10px 0 20px\" }}\n            encType=\"multipart/form-data\" //이미지의 형식. 비디오도 대부분 이 형식을 따름\n            onFinish={onSubmit}\n        >\n            <Input.TextArea\n                value={text}\n                onChange={onChangeText}\n                maxLength={140}\n                placeholder=\"어떤 신기한 일이 있었나요?\"\n            />\n            <div>\n                <input\n                    type=\"file\"\n                    name=\"image\"\n                    multiple\n                    hidden\n                    ref={imageInput}\n                    onChange={onChangeImages}\n                />\n                <Button onClick={onClickImageUpload}>이미지 업로드</Button>\n                <Button\n                    type=\"primary\"\n                    style={{ float: \"right\" }}\n                    htmlType=\"submit\"\n                >\n                    짹짹\n                </Button>\n            </div>\n            <div>\n                {imagePaths.map((v) => {\n                    <div key={v} style={{ display: \"inline-block\" }}>\n                        <img src={v} style={{ width: \"200px\" }} alt={v} />\n                    </div>;\n                })}\n            </div>\n        </Form>\n    );\n};\n\nexport default PostForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}