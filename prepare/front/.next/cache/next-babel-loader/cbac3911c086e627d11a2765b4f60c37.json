{"ast":null,"code":"import { all, fork, put } from \"redux-saga/effects\";\nimport { takeLatest } from \"redux-saga/effects\";\nfunction addPostAPI() {\n  return axios.post(\"/api/post\");\n}\nfunction* addPost(action) {\n  try {\n    const result = yield call(addPostAPI, action.data); //로그인 요청에 대해 결과값으로 받을 수 있다.\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    put({\n      type: ADD_POST_FAILURE,\n      data: err.response.data\n    });\n  }\n}\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\nfunction addCommentAPI() {\n  return axios.post(`/api/post/${data.id}/comment`, data);\n}\nfunction* addComment(action) {\n  try {\n    const result = yield call(addCommentAPI, action.data); //로그인 요청에 대해 결과값으로 받을 수 있다.\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    put({\n      type: ADD_COMMENT_FAILURE,\n      data: err.response.data\n    });\n  }\n}\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchAddComment)]);\n}","map":{"version":3,"names":["all","fork","put","takeLatest","addPostAPI","axios","post","addPost","action","result","call","data","type","ADD_POST_SUCCESS","err","ADD_POST_FAILURE","response","watchAddPost","ADD_POST_REQUEST","addCommentAPI","id","addComment","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","watchAddComment","ADD_COMMENT_REQUEST","postSaga"],"sources":["/Users/ihyeoncheol/Desktop/nodebird_project/prepare/front/sagas/post.js"],"sourcesContent":["import { all, fork, put } from \"redux-saga/effects\";\nimport { takeLatest } from \"redux-saga/effects\";\n\nfunction addPostAPI() {\n    return axios.post(\"/api/post\");\n}\n\nfunction* addPost(action) {\n    try {\n        const result = yield call(addPostAPI, action.data); //로그인 요청에 대해 결과값으로 받을 수 있다.\n        yield put({ type: ADD_POST_SUCCESS, data: result.data });\n    } catch (err) {\n        put({ type: ADD_POST_FAILURE, data: err.response.data });\n    }\n}\n\nfunction* watchAddPost() {\n    yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction addCommentAPI() {\n    return axios.post(`/api/post/${data.id}/comment`, data);\n}\n\nfunction* addComment(action) {\n    try {\n        const result = yield call(addCommentAPI, action.data); //로그인 요청에 대해 결과값으로 받을 수 있다.\n        yield put({ type: ADD_COMMENT_SUCCESS, data: result.data });\n    } catch (err) {\n        put({ type: ADD_COMMENT_FAILURE, data: err.response.data });\n    }\n}\n\nfunction* watchAddComment() {\n    yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\nexport default function* postSaga() {\n    yield all([fork(watchAddPost), fork(watchAddComment)]);\n}\n"],"mappings":"AAAA,SAASA,GAAG,EAAEC,IAAI,EAAEC,GAAG,QAAQ,oBAAoB;AACnD,SAASC,UAAU,QAAQ,oBAAoB;AAE/C,SAASC,UAAUA,CAAA,EAAG;EAClB,OAAOC,KAAK,CAACC,IAAI,CAAC,WAAW,CAAC;AAClC;AAEA,UAAUC,OAAOA,CAACC,MAAM,EAAE;EACtB,IAAI;IACA,MAAMC,MAAM,GAAG,MAAMC,IAAI,CAACN,UAAU,EAAEI,MAAM,CAACG,IAAI,CAAC,CAAC,CAAC;IACpD,MAAMT,GAAG,CAAC;MAAEU,IAAI,EAAEC,gBAAgB;MAAEF,IAAI,EAAEF,MAAM,CAACE;IAAK,CAAC,CAAC;EAC5D,CAAC,CAAC,OAAOG,GAAG,EAAE;IACVZ,GAAG,CAAC;MAAEU,IAAI,EAAEG,gBAAgB;MAAEJ,IAAI,EAAEG,GAAG,CAACE,QAAQ,CAACL;IAAK,CAAC,CAAC;EAC5D;AACJ;AAEA,UAAUM,YAAYA,CAAA,EAAG;EACrB,MAAMd,UAAU,CAACe,gBAAgB,EAAEX,OAAO,CAAC;AAC/C;AAEA,SAASY,aAAaA,CAAA,EAAG;EACrB,OAAOd,KAAK,CAACC,IAAI,CAAE,aAAYK,IAAI,CAACS,EAAG,UAAS,EAAET,IAAI,CAAC;AAC3D;AAEA,UAAUU,UAAUA,CAACb,MAAM,EAAE;EACzB,IAAI;IACA,MAAMC,MAAM,GAAG,MAAMC,IAAI,CAACS,aAAa,EAAEX,MAAM,CAACG,IAAI,CAAC,CAAC,CAAC;IACvD,MAAMT,GAAG,CAAC;MAAEU,IAAI,EAAEU,mBAAmB;MAAEX,IAAI,EAAEF,MAAM,CAACE;IAAK,CAAC,CAAC;EAC/D,CAAC,CAAC,OAAOG,GAAG,EAAE;IACVZ,GAAG,CAAC;MAAEU,IAAI,EAAEW,mBAAmB;MAAEZ,IAAI,EAAEG,GAAG,CAACE,QAAQ,CAACL;IAAK,CAAC,CAAC;EAC/D;AACJ;AAEA,UAAUa,eAAeA,CAAA,EAAG;EACxB,MAAMrB,UAAU,CAACsB,mBAAmB,EAAEJ,UAAU,CAAC;AACrD;AACA,eAAe,UAAUK,QAAQA,CAAA,EAAG;EAChC,MAAM1B,GAAG,CAAC,CAACC,IAAI,CAACgB,YAAY,CAAC,EAAEhB,IAAI,CAACuB,eAAe,CAAC,CAAC,CAAC;AAC1D"},"metadata":{},"sourceType":"module"}