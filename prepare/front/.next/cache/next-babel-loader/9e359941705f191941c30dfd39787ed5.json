{"ast":null,"code":"var _jsxFileName = \"/Users/ihyeoncheol/Desktop/nodebird_project/prepare/front/components/PostForm.js\";\nvar __jsx = React.createElement;\nimport { Form, Input, Button } from \"antd\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport React, { useCallback, useRef, useEffect } from \"react\";\nimport { ADD_POST_REQUEST, UPLOAD_IMAGES_REQUEST, REMOVE_IMAGE } from \"../reducers/post\";\nimport useInput from \"../hooks/useInput\";\nconst PostForm = () => {\n  const dispatch = useDispatch();\n  const [text, onChangeText, setText] = useInput(\"\");\n  const {\n    imagePaths,\n    addPostDone\n  } = useSelector(state => state.post);\n  const imageInput = useRef();\n  //ref는 실제DOM에 접근하기 위해서 사용\n\n  useEffect(() => {\n    if (addPostDone) {\n      setText(\"\");\n    }\n  }, [addPostDone]);\n  const onSubmit = useCallback(() => {\n    const formData = new FormData();\n    imagePaths.forEach(p => {\n      formData.append(\"image\", p);\n    });\n    formData.append(\"content\", text);\n    dispatch({\n      type: ADD_POST_REQUEST,\n      data: formData\n    });\n    // setText(\"\"); //여기서 이렇게 초기화해줄 경우에 서버쪽에서 응답으로 오류가 났을때 게시물이 잘 올라가지 않았음에도 초기화되어버림.\n    //그래서 위에 useEffect부분을 따로 작성해줌.\n    // dispatch(addPost(text));\n  }, [text, imagePath]);\n  const onClickImageUpload = useCallback(() => {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  const onChangeImages = useCallback(e => {\n    console.log(\"images\", e.target.files);\n    const imageFormData = new FormData();\n    [].forEach.call(e.target.files, f => {\n      imageFormData.append(\"image\", f);\n    });\n    dispatch({\n      type: UPLOAD_IMAGES_REQUEST,\n      data: imageFormData\n    });\n  }, []);\n  const onRemoveImage = useCallback(index => () => {\n    dispatch({\n      type: REMOVE_IMAGE,\n      data: index\n    });\n  });\n  return __jsx(Form, {\n    style: {\n      margin: \"10px 0 20px\"\n    },\n    encType: \"multipart/form-data\" //이미지의 형식. 비디오도 대부분 이 형식을 따름\n    ,\n    onFinish: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, __jsx(Input.TextArea, {\n    value: text,\n    onChange: onChangeText,\n    maxLength: 140,\n    placeholder: \"\\uC5B4\\uB5A4 \\uC2E0\\uAE30\\uD55C \\uC77C\\uC774 \\uC788\\uC5C8\\uB098\\uC694?\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    type: \"file\",\n    name: \"image\",\n    multiple: true,\n    hidden: true,\n    ref: imageInput,\n    onChange: onChangeImages //이미지를 선택하고 확인을 눌렀을 때 발생하는 이벤트\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }), __jsx(Button, {\n    onClick: onClickImageUpload,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"), __jsx(Button, {\n    type: \"primary\",\n    style: {\n      float: \"right\"\n    },\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }, \"\\uC9F9\\uC9F9\")), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, imagePaths.map((v, i) => __jsx(\"div\", {\n    key: v,\n    style: {\n      display: \"inline-block\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 21\n    }\n  }, __jsx(\"img\", {\n    src: `http://localhost:3065/${v}`,\n    style: {\n      width: \"200px\"\n    },\n    alt: v,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 25\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 25\n    }\n  }, __jsx(Button, {\n    onClick: onRemoveImage(i),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 29\n    }\n  }, \"\\uC81C\\uAC70\"))))));\n};\nexport default PostForm;","map":{"version":3,"names":["Form","Input","Button","useSelector","useDispatch","React","useCallback","useRef","useEffect","ADD_POST_REQUEST","UPLOAD_IMAGES_REQUEST","REMOVE_IMAGE","useInput","PostForm","dispatch","text","onChangeText","setText","imagePaths","addPostDone","state","post","imageInput","onSubmit","formData","FormData","forEach","p","append","type","data","imagePath","onClickImageUpload","current","click","onChangeImages","e","console","log","target","files","imageFormData","call","f","onRemoveImage","index","__jsx","style","margin","encType","onFinish","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","TextArea","value","onChange","maxLength","placeholder","name","multiple","hidden","ref","onClick","float","htmlType","map","v","i","key","display","src","width","alt"],"sources":["/Users/ihyeoncheol/Desktop/nodebird_project/prepare/front/components/PostForm.js"],"sourcesContent":["import { Form, Input, Button } from \"antd\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport React, { useCallback, useRef, useEffect } from \"react\";\nimport {\n    ADD_POST_REQUEST,\n    UPLOAD_IMAGES_REQUEST,\n    REMOVE_IMAGE,\n} from \"../reducers/post\";\nimport useInput from \"../hooks/useInput\";\n\nconst PostForm = () => {\n    const dispatch = useDispatch();\n    const [text, onChangeText, setText] = useInput(\"\");\n    const { imagePaths, addPostDone } = useSelector((state) => state.post);\n\n    const imageInput = useRef();\n    //ref는 실제DOM에 접근하기 위해서 사용\n\n    useEffect(() => {\n        if (addPostDone) {\n            setText(\"\");\n        }\n    }, [addPostDone]);\n\n    const onSubmit = useCallback(() => {\n        const formData = new FormData();\n        imagePaths.forEach((p) => {\n            formData.append(\"image\", p);\n        });\n        formData.append(\"content\", text);\n        dispatch({\n            type: ADD_POST_REQUEST,\n            data: formData,\n        });\n        // setText(\"\"); //여기서 이렇게 초기화해줄 경우에 서버쪽에서 응답으로 오류가 났을때 게시물이 잘 올라가지 않았음에도 초기화되어버림.\n        //그래서 위에 useEffect부분을 따로 작성해줌.\n        // dispatch(addPost(text));\n    }, [text, imagePath]);\n\n    const onClickImageUpload = useCallback(() => {\n        imageInput.current.click();\n    }, [imageInput.current]);\n\n    const onChangeImages = useCallback((e) => {\n        console.log(\"images\", e.target.files);\n        const imageFormData = new FormData();\n        [].forEach.call(e.target.files, (f) => {\n            imageFormData.append(\"image\", f);\n        });\n        dispatch({\n            type: UPLOAD_IMAGES_REQUEST,\n            data: imageFormData,\n        });\n    }, []);\n\n    const onRemoveImage = useCallback((index) => () => {\n        dispatch({\n            type: REMOVE_IMAGE,\n            data: index,\n        });\n    });\n\n    return (\n        <Form\n            style={{ margin: \"10px 0 20px\" }}\n            encType=\"multipart/form-data\" //이미지의 형식. 비디오도 대부분 이 형식을 따름\n            onFinish={onSubmit}\n        >\n            <Input.TextArea\n                value={text}\n                onChange={onChangeText}\n                maxLength={140}\n                placeholder=\"어떤 신기한 일이 있었나요?\"\n            />\n            <div>\n                <input\n                    type=\"file\"\n                    name=\"image\"\n                    multiple\n                    hidden\n                    ref={imageInput}\n                    onChange={onChangeImages} //이미지를 선택하고 확인을 눌렀을 때 발생하는 이벤트\n                />\n                <Button onClick={onClickImageUpload}>이미지 업로드</Button>\n                <Button\n                    type=\"primary\"\n                    style={{ float: \"right\" }}\n                    htmlType=\"submit\"\n                >\n                    짹짹\n                </Button>\n            </div>\n            <div>\n                {imagePaths.map((v, i) => (\n                    <div key={v} style={{ display: \"inline-block\" }}>\n                        <img\n                            src={`http://localhost:3065/${v}`}\n                            style={{ width: \"200px\" }}\n                            alt={v}\n                        />\n                        <div>\n                            <Button onClick={onRemoveImage(i)}>제거</Button>\n                        </div>\n                    </div>\n                ))}\n            </div>\n        </Form>\n    );\n};\n\nexport default PostForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}