{"ast":null,"code":"import { createWrapper } from \"next-redux-wrapper\";\nimport reducer from \"../reducers\";\nimport { createStore, compose, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nconst loggerMiddleware = ({\n  dispatch,\n  getState\n}) => next => action => {\n  if (typeof action === \"function\") {\n    return action(dispatch, getState);\n  }\n  return next(action);\n};\nconst configureStore = () => {\n  const middlewares = [loggerMiddleware];\n  const enhancer = false ? compose(applyMiddleware(...middlewares)) //배포용\n  : composeWithDevTools(applyMiddleware(...middlewares)); //개발용\n  const store = createStore(reducer, enhancer);\n  store.dispatch({\n    type: \"CHANGE_NICKNAME\",\n    data: \"tuk\"\n  });\n  return store;\n};\nconst wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"names":["createWrapper","reducer","createStore","compose","applyMiddleware","composeWithDevTools","loggerMiddleware","dispatch","getState","next","action","configureStore","middlewares","enhancer","store","type","data","wrapper","debug"],"sources":["/Users/ihyeoncheol/Desktop/nodebird_project/prepare/front/store/configureStore.js"],"sourcesContent":["import { createWrapper } from \"next-redux-wrapper\";\nimport reducer from \"../reducers\";\nimport { createStore, compose, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nconst loggerMiddleware =\n    ({ dispatch, getState }) =>\n    (next) =>\n    (action) => {\n        if (typeof action === \"function\") {\n            return action(dispatch, getState);\n        }\n        return next(action);\n    };\nconst configureStore = () => {\n    const middlewares = [loggerMiddleware];\n    const enhancer =\n        process.env.NODE_ENV === \"production\"\n            ? compose(applyMiddleware(...middlewares)) //배포용\n            : composeWithDevTools(applyMiddleware(...middlewares)); //개발용\n    const store = createStore(reducer, enhancer);\n    store.dispatch({\n        type: \"CHANGE_NICKNAME\",\n        data: \"tuk\",\n    });\n    return store;\n};\n\nconst wrapper = createWrapper(configureStore, {\n    debug: process.env.NODE_ENV === \"development\",\n});\nexport default wrapper;\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,oBAAoB;AAClD,OAAOC,OAAO,MAAM,aAAa;AACjC,SAASC,WAAW,EAAEC,OAAO,EAAEC,eAAe,QAAQ,OAAO;AAC7D,SAASC,mBAAmB,QAAQ,0BAA0B;AAE9D,MAAMC,gBAAgB,GAClBA,CAAC;EAAEC,QAAQ;EAAEC;AAAS,CAAC,KACtBC,IAAI,IACJC,MAAM,IAAK;EACR,IAAI,OAAOA,MAAM,KAAK,UAAU,EAAE;IAC9B,OAAOA,MAAM,CAACH,QAAQ,EAAEC,QAAQ,CAAC;EACrC;EACA,OAAOC,IAAI,CAACC,MAAM,CAAC;AACvB,CAAC;AACL,MAAMC,cAAc,GAAGA,CAAA,KAAM;EACzB,MAAMC,WAAW,GAAG,CAACN,gBAAgB,CAAC;EACtC,MAAMO,QAAQ,GACV,QACMV,OAAO,CAACC,eAAe,CAAC,GAAGQ,WAAW,CAAC,CAAC,CAAC;EAAA,EACzCP,mBAAmB,CAACD,eAAe,CAAC,GAAGQ,WAAW,CAAC,CAAC,CAAC,CAAC;EAChE,MAAME,KAAK,GAAGZ,WAAW,CAACD,OAAO,EAAEY,QAAQ,CAAC;EAC5CC,KAAK,CAACP,QAAQ,CAAC;IACXQ,IAAI,EAAE,iBAAiB;IACvBC,IAAI,EAAE;EACV,CAAC,CAAC;EACF,OAAOF,KAAK;AAChB,CAAC;AAED,MAAMG,OAAO,GAAGjB,aAAa,CAACW,cAAc,EAAE;EAC1CO,KAAK;AACT,CAAC,CAAC;AACF,eAAeD,OAAO"},"metadata":{},"sourceType":"module"}