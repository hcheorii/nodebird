{"ast":null,"code":"import { all, fork, call, put, take } from \"redux-saga/effects\"; //saga의 이펙트 //all은 fork, call을 한번에 실행해준다.\nimport axios from \"axios\";\nfunction logInAPI() {\n  return axios.post(\"api/login\");\n}\nfunction* logIn() {\n  const result = yield call(logInAPI);\n  yield put({\n    type: \"LOG_IN_SUCCESS\",\n    data: result.data\n  });\n}\nexport default function* rootSaga() {\n  yield all([fork(watchLogin)]);\n}","map":{"version":3,"names":["all","fork","call","put","take","axios","logInAPI","post","logIn","result","type","data","rootSaga","watchLogin"],"sources":["/Users/ihyeoncheol/Desktop/nodebird_project/prepare/front/sagas/index.js"],"sourcesContent":["import { all, fork, call, put, take } from \"redux-saga/effects\"; //saga의 이펙트 //all은 fork, call을 한번에 실행해준다.\nimport axios from \"axios\";\nfunction logInAPI() {\n    return axios.post(\"api/login\");\n}\n\nfunction* logIn() {\n    const result = yield call(logInAPI);\n    yield put({\n        type: \"LOG_IN_SUCCESS\",\n        data: result.data,\n    });\n}\nexport default function* rootSaga() {\n    yield all([fork(watchLogin)]);\n}\n"],"mappings":"AAAA,SAASA,GAAG,EAAEC,IAAI,EAAEC,IAAI,EAAEC,GAAG,EAAEC,IAAI,QAAQ,oBAAoB,CAAC,CAAC;AACjE,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQA,CAAA,EAAG;EAChB,OAAOD,KAAK,CAACE,IAAI,CAAC,WAAW,CAAC;AAClC;AAEA,UAAUC,KAAKA,CAAA,EAAG;EACd,MAAMC,MAAM,GAAG,MAAMP,IAAI,CAACI,QAAQ,CAAC;EACnC,MAAMH,GAAG,CAAC;IACNO,IAAI,EAAE,gBAAgB;IACtBC,IAAI,EAAEF,MAAM,CAACE;EACjB,CAAC,CAAC;AACN;AACA,eAAe,UAAUC,QAAQA,CAAA,EAAG;EAChC,MAAMZ,GAAG,CAAC,CAACC,IAAI,CAACY,UAAU,CAAC,CAAC,CAAC;AACjC"},"metadata":{},"sourceType":"module"}