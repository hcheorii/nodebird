{"ast":null,"code":"import { createWrapper } from \"next-redux-wrapper\";\nimport reducer from \"../reducers\";\nimport rootSaga from \"../sagas\";\nimport { createStore } from \"redux\";\nimport { compose, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport createSagaMiddleware from \"redux-saga\";\nvar loggerMiddleware = function loggerMiddleware(_ref) {\n  var dispatch = _ref.dispatch,\n    getState = _ref.getState;\n  return function (next) {\n    return function (action) {\n      if (typeof action === \"function\") {\n        return action(dispatch, getState);\n      }\n      return next(action);\n    };\n  };\n};\nvar configureStore = function configureStore() {\n  var sagaMiddleware = createSagaMiddleware();\n  var middlewares = [sagaMiddleware, loggerMiddleware];\n  var enhancer = false ? compose(applyMiddleware.apply(void 0, middlewares)) //배포용\n  : composeWithDevTools(applyMiddleware.apply(void 0, middlewares)); //개발용\n  var store = createStore(reducer, enhancer);\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  console.log(\"Store created:\", store); // 확인용 로그\n\n  return store;\n};\nvar wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"names":["createWrapper","reducer","rootSaga","createStore","compose","applyMiddleware","composeWithDevTools","createSagaMiddleware","loggerMiddleware","_ref","dispatch","getState","next","action","configureStore","sagaMiddleware","middlewares","enhancer","apply","store","sagaTask","run","console","log","wrapper","debug"],"sources":["/Users/ihyeoncheol/Desktop/nodebird_project/prepare/front/store/configureStore.js"],"sourcesContent":["import { createWrapper } from \"next-redux-wrapper\";\nimport reducer from \"../reducers\";\nimport rootSaga from \"../sagas\";\nimport { createStore } from \"redux\";\nimport { compose, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport createSagaMiddleware from \"redux-saga\";\n\nconst loggerMiddleware =\n    ({ dispatch, getState }) =>\n    (next) =>\n    (action) => {\n        if (typeof action === \"function\") {\n            return action(dispatch, getState);\n        }\n        return next(action);\n    };\nconst configureStore = () => {\n    const sagaMiddleware = createSagaMiddleware();\n    const middlewares = [sagaMiddleware, loggerMiddleware];\n    const enhancer =\n        process.env.NODE_ENV === \"production\"\n            ? compose(applyMiddleware(...middlewares)) //배포용\n            : composeWithDevTools(applyMiddleware(...middlewares)); //개발용\n    const store = createStore(reducer, enhancer);\n    store.sagaTask = sagaMiddleware.run(rootSaga);\n    console.log(\"Store created:\", store); // 확인용 로그\n\n    return store;\n};\n\nconst wrapper = createWrapper(configureStore, {\n    debug: process.env.NODE_ENV === \"development\",\n});\nexport default wrapper;\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,oBAAoB;AAClD,OAAOC,OAAO,MAAM,aAAa;AACjC,OAAOC,QAAQ,MAAM,UAAU;AAC/B,SAASC,WAAW,QAAQ,OAAO;AACnC,SAASC,OAAO,EAAEC,eAAe,QAAQ,OAAO;AAChD,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,OAAOC,oBAAoB,MAAM,YAAY;AAE7C,IAAMC,gBAAgB,GAClB,SADEA,gBAAgBA,CAAAC,IAAA;EAAA,IACfC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;IAAEC,QAAQ,GAAAF,IAAA,CAARE,QAAQ;EAAA,OACrB,UAACC,IAAI;IAAA,OACL,UAACC,MAAM,EAAK;MACR,IAAI,OAAOA,MAAM,KAAK,UAAU,EAAE;QAC9B,OAAOA,MAAM,CAACH,QAAQ,EAAEC,QAAQ,CAAC;MACrC;MACA,OAAOC,IAAI,CAACC,MAAM,CAAC;IACvB,CAAC;EAAA;AAAA;AACL,IAAMC,cAAc,GAAG,SAAjBA,cAAcA,CAAA,EAAS;EACzB,IAAMC,cAAc,GAAGR,oBAAoB,CAAC,CAAC;EAC7C,IAAMS,WAAW,GAAG,CAACD,cAAc,EAAEP,gBAAgB,CAAC;EACtD,IAAMS,QAAQ,GACV,QACMb,OAAO,CAACC,eAAe,CAAAa,KAAA,SAAIF,WAAW,CAAC,CAAC,CAAC;EAAA,EACzCV,mBAAmB,CAACD,eAAe,CAAAa,KAAA,SAAIF,WAAW,CAAC,CAAC,CAAC,CAAC;EAChE,IAAMG,KAAK,GAAGhB,WAAW,CAACF,OAAO,EAAEgB,QAAQ,CAAC;EAC5CE,KAAK,CAACC,QAAQ,GAAGL,cAAc,CAACM,GAAG,CAACnB,QAAQ,CAAC;EAC7CoB,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEJ,KAAK,CAAC,CAAC,CAAC;;EAEtC,OAAOA,KAAK;AAChB,CAAC;AAED,IAAMK,OAAO,GAAGxB,aAAa,CAACc,cAAc,EAAE;EAC1CW,KAAK;AACT,CAAC,CAAC;AACF,eAAeD,OAAO"},"metadata":{},"sourceType":"module"}