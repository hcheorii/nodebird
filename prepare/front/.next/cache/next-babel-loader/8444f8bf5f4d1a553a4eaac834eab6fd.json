{"ast":null,"code":"// configure.js\nimport { createWrapper } from \"next-redux-wrapper\";\nimport reducer from \"../reducers\";\nimport rootSaga from \"../sagas\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nvar loggerMiddleware = function loggerMiddleware(_ref) {\n  var dispatch = _ref.dispatch,\n    getState = _ref.getState;\n  return function (next) {\n    return function (action) {\n      if (typeof action === \"function\") {\n        return action(dispatch, getState);\n      }\n      return next(action);\n    };\n  };\n};\nvar configureStore = function configureStore() {\n  var sagaMiddleware = createSagaMiddleware();\n  var middlewares = [sagaMiddleware, loggerMiddleware];\n  var store = createStore(reducer, applyMiddleware.apply(void 0, middlewares));\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  return store;\n};\nvar wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"names":["createWrapper","reducer","rootSaga","createStore","applyMiddleware","createSagaMiddleware","loggerMiddleware","_ref","dispatch","getState","next","action","configureStore","sagaMiddleware","middlewares","store","apply","sagaTask","run","wrapper","debug"],"sources":["/Users/ihyeoncheol/Desktop/nodebird_project/prepare/front/store/configureStore.js"],"sourcesContent":["// configure.js\nimport { createWrapper } from \"next-redux-wrapper\";\nimport reducer from \"../reducers\";\nimport rootSaga from \"../sagas\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\n\nconst loggerMiddleware =\n    ({ dispatch, getState }) =>\n    (next) =>\n    (action) => {\n        if (typeof action === \"function\") {\n            return action(dispatch, getState);\n        }\n        return next(action);\n    };\n\nconst configureStore = () => {\n    const sagaMiddleware = createSagaMiddleware();\n    const middlewares = [sagaMiddleware, loggerMiddleware];\n\n    const store = createStore(reducer, applyMiddleware(...middlewares));\n    store.sagaTask = sagaMiddleware.run(rootSaga);\n\n    return store;\n};\n\nconst wrapper = createWrapper(configureStore, {\n    debug: process.env.NODE_ENV === \"development\",\n});\n\nexport default wrapper;\n"],"mappings":"AAAA;AACA,SAASA,aAAa,QAAQ,oBAAoB;AAClD,OAAOC,OAAO,MAAM,aAAa;AACjC,OAAOC,QAAQ,MAAM,UAAU;AAC/B,SAASC,WAAW,EAAEC,eAAe,QAAQ,OAAO;AACpD,OAAOC,oBAAoB,MAAM,YAAY;AAE7C,IAAMC,gBAAgB,GAClB,SADEA,gBAAgBA,CAAAC,IAAA;EAAA,IACfC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;IAAEC,QAAQ,GAAAF,IAAA,CAARE,QAAQ;EAAA,OACrB,UAACC,IAAI;IAAA,OACL,UAACC,MAAM,EAAK;MACR,IAAI,OAAOA,MAAM,KAAK,UAAU,EAAE;QAC9B,OAAOA,MAAM,CAACH,QAAQ,EAAEC,QAAQ,CAAC;MACrC;MACA,OAAOC,IAAI,CAACC,MAAM,CAAC;IACvB,CAAC;EAAA;AAAA;AAEL,IAAMC,cAAc,GAAG,SAAjBA,cAAcA,CAAA,EAAS;EACzB,IAAMC,cAAc,GAAGR,oBAAoB,CAAC,CAAC;EAC7C,IAAMS,WAAW,GAAG,CAACD,cAAc,EAAEP,gBAAgB,CAAC;EAEtD,IAAMS,KAAK,GAAGZ,WAAW,CAACF,OAAO,EAAEG,eAAe,CAAAY,KAAA,SAAIF,WAAW,CAAC,CAAC;EACnEC,KAAK,CAACE,QAAQ,GAAGJ,cAAc,CAACK,GAAG,CAAChB,QAAQ,CAAC;EAE7C,OAAOa,KAAK;AAChB,CAAC;AAED,IAAMI,OAAO,GAAGnB,aAAa,CAACY,cAAc,EAAE;EAC1CQ,KAAK;AACT,CAAC,CAAC;AAEF,eAAeD,OAAO"},"metadata":{},"sourceType":"module"}