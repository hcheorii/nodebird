{"ast":null,"code":"// configure.js\nimport { createWrapper } from \"next-redux-wrapper\";\nimport reducer from \"../reducers\";\nimport rootSaga from \"../sagas\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nconst loggerMiddleware = ({\n  dispatch,\n  getState\n}) => next => action => {\n  if (typeof action === \"function\") {\n    return action(dispatch, getState);\n  }\n  return next(action);\n};\nconst configureStore = () => {\n  const sagaMiddleware = createSagaMiddleware();\n  const middlewares = [sagaMiddleware, loggerMiddleware];\n  const store = createStore(reducer, applyMiddleware(...middlewares));\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  return store;\n};\nconst wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"names":["createWrapper","reducer","rootSaga","createStore","applyMiddleware","createSagaMiddleware","loggerMiddleware","dispatch","getState","next","action","configureStore","sagaMiddleware","middlewares","store","sagaTask","run","wrapper","debug"],"sources":["/Users/ihyeoncheol/Desktop/nodebird_project/prepare/front/store/configureStore.js"],"sourcesContent":["// configure.js\nimport { createWrapper } from \"next-redux-wrapper\";\nimport reducer from \"../reducers\";\nimport rootSaga from \"../sagas\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\n\nconst loggerMiddleware =\n    ({ dispatch, getState }) =>\n    (next) =>\n    (action) => {\n        if (typeof action === \"function\") {\n            return action(dispatch, getState);\n        }\n        return next(action);\n    };\n\nconst configureStore = () => {\n    const sagaMiddleware = createSagaMiddleware();\n    const middlewares = [sagaMiddleware, loggerMiddleware];\n\n    const store = createStore(reducer, applyMiddleware(...middlewares));\n    store.sagaTask = sagaMiddleware.run(rootSaga);\n\n    return store;\n};\n\nconst wrapper = createWrapper(configureStore, {\n    debug: process.env.NODE_ENV === \"development\",\n});\n\nexport default wrapper;\n"],"mappings":"AAAA;AACA,SAASA,aAAa,QAAQ,oBAAoB;AAClD,OAAOC,OAAO,MAAM,aAAa;AACjC,OAAOC,QAAQ,MAAM,UAAU;AAC/B,SAASC,WAAW,EAAEC,eAAe,QAAQ,OAAO;AACpD,OAAOC,oBAAoB,MAAM,YAAY;AAE7C,MAAMC,gBAAgB,GAClBA,CAAC;EAAEC,QAAQ;EAAEC;AAAS,CAAC,KACtBC,IAAI,IACJC,MAAM,IAAK;EACR,IAAI,OAAOA,MAAM,KAAK,UAAU,EAAE;IAC9B,OAAOA,MAAM,CAACH,QAAQ,EAAEC,QAAQ,CAAC;EACrC;EACA,OAAOC,IAAI,CAACC,MAAM,CAAC;AACvB,CAAC;AAEL,MAAMC,cAAc,GAAGA,CAAA,KAAM;EACzB,MAAMC,cAAc,GAAGP,oBAAoB,CAAC,CAAC;EAC7C,MAAMQ,WAAW,GAAG,CAACD,cAAc,EAAEN,gBAAgB,CAAC;EAEtD,MAAMQ,KAAK,GAAGX,WAAW,CAACF,OAAO,EAAEG,eAAe,CAAC,GAAGS,WAAW,CAAC,CAAC;EACnEC,KAAK,CAACC,QAAQ,GAAGH,cAAc,CAACI,GAAG,CAACd,QAAQ,CAAC;EAE7C,OAAOY,KAAK;AAChB,CAAC;AAED,MAAMG,OAAO,GAAGjB,aAAa,CAACW,cAAc,EAAE;EAC1CO,KAAK;AACT,CAAC,CAAC;AAEF,eAAeD,OAAO"},"metadata":{},"sourceType":"module"}