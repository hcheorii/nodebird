{"ast":null,"code":"var _jsxFileName = \"/Users/ihyeoncheol/Desktop/nodebird_project/prepare/front/components/PostCard.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport { Button, Card, Popover, Avatar, Image, List, Comment } from \"antd\";\nimport { RetweetOutlined, HeartOutlined, MessageOutlined, EllipsisOutlined, HeartTwoTone } from \"@ant-design/icons\";\nimport { useCallback } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport PostImages from \"./PostImages\";\nimport CommentForm from \"./CommentForm\";\nimport PostCardContent from \"./PostCardContent\";\nimport { REMOVE_POST_REQUEST } from \"../reducers/post\";\nconst PostCard = ({\n  post\n}) => {\n  const {\n    0: liked,\n    1: setLiked\n  } = useState(false);\n  const {\n    0: commentFormOpened,\n    1: setCommentFormOpened\n  } = useState(false);\n  const dispatch = useDispatch();\n  const onToggleLike = useCallback(() => {\n    setLiked(prev => !prev);\n  }, []);\n  const onToggleComment = useCallback(() => {\n    setCommentFormOpened(prev => !prev);\n  }, []);\n  const onRemovePost = useCallback(() => {\n    dispatch({\n      type: REMOVE_POST_REQUEST,\n      data: action.data\n    });\n  }, []);\n  const id = useSelector(state => {\n    var _state$user$me;\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  return __jsx(\"div\", {\n    style: {\n      marginBottom: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, __jsx(Card, {\n    cover: post.Images[0] && __jsx(PostImages, {\n      images: post.Images,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 42\n      }\n    }),\n    actions: [__jsx(RetweetOutlined, {\n      key: \"retweet\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }\n    }), liked ? __jsx(HeartTwoTone, {\n      twoToneColor: \"ev2f96\",\n      onClick: onToggleLike,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 25\n      }\n    }) : __jsx(HeartOutlined, {\n      key: \"heart\",\n      onClick: onToggleLike,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 25\n      }\n    }), __jsx(MessageOutlined, {\n      onClick: onToggleComment,\n      key: \"comment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }\n    }), __jsx(Popover, {\n      key: \"more\",\n      content: __jsx(Button.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 29\n        }\n      }, id && post.User.id === id ? __jsx(React.Fragment, null, __jsx(Button, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 41\n        }\n      }, \"\\uC218\\uC815\"), __jsx(Button, {\n        type: \"danger\",\n        onClick: onRemovePost,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 41\n        }\n      }, \"\\uC0AD\\uC81C\")) : __jsx(Button, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 37\n        }\n      }, \"\\uC2E0\\uACE0\")),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }\n    }, __jsx(EllipsisOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 25\n      }\n    }))],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, __jsx(Card.Meta, {\n    avatar: __jsx(Avatar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 29\n      }\n    }, post.User.nickname[0]),\n    title: post.User.nickname,\n    description: __jsx(PostCardContent, {\n      postData: post.content,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 34\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  })), commentFormOpened && __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, __jsx(CommentForm, {\n    post: post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  }), __jsx(List, {\n    header: `${post.Comments.length}개의 댓글`,\n    itemLayout: \"horizontal\",\n    dataSource: post.Comments,\n    renderItem: item => __jsx(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 29\n      }\n    }, __jsx(Comment, {\n      author: item.User.nickname //댓글쓴사람\n      ,\n      avatar: __jsx(Avatar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 41\n        }\n      }, item.User.nickname[0]) //아바타\n      ,\n\n      content: item.content //\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 33\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 21\n    }\n  })));\n};\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.object,\n    Comment: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default PostCard;","map":{"version":3,"names":["React","useState","Button","Card","Popover","Avatar","Image","List","Comment","RetweetOutlined","HeartOutlined","MessageOutlined","EllipsisOutlined","HeartTwoTone","useCallback","useSelector","useDispatch","PropTypes","PostImages","CommentForm","PostCardContent","REMOVE_POST_REQUEST","PostCard","post","liked","setLiked","commentFormOpened","setCommentFormOpened","dispatch","onToggleLike","prev","onToggleComment","onRemovePost","type","data","action","id","state","_state$user$me","user","me","__jsx","style","marginBottom","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","cover","Images","images","actions","key","twoToneColor","onClick","content","Group","User","Fragment","Meta","avatar","nickname","title","description","postData","header","Comments","length","itemLayout","dataSource","renderItem","item","author","propTypes","shape","number","object","string","createdAt","arrayOf","isRequired"],"sources":["/Users/ihyeoncheol/Desktop/nodebird_project/prepare/front/components/PostCard.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Button, Card, Popover, Avatar, Image, List, Comment } from \"antd\";\nimport {\n    RetweetOutlined,\n    HeartOutlined,\n    MessageOutlined,\n    EllipsisOutlined,\n    HeartTwoTone,\n} from \"@ant-design/icons\";\nimport { useCallback } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport PostImages from \"./PostImages\";\nimport CommentForm from \"./CommentForm\";\nimport PostCardContent from \"./PostCardContent\";\nimport { REMOVE_POST_REQUEST } from \"../reducers/post\";\n\nconst PostCard = ({ post }) => {\n    const [liked, setLiked] = useState(false);\n    const [commentFormOpened, setCommentFormOpened] = useState(false);\n\n    const dispatch = useDispatch();\n\n    const onToggleLike = useCallback(() => {\n        setLiked((prev) => !prev);\n    }, []);\n\n    const onToggleComment = useCallback(() => {\n        setCommentFormOpened((prev) => !prev);\n    }, []);\n\n    const onRemovePost = useCallback(() => {\n        dispatch({\n            type: REMOVE_POST_REQUEST,\n            data: action.data,\n        });\n    }, []);\n\n    const id = useSelector((state) => state.user.me?.id);\n\n    return (\n        <div style={{ marginBottom: 20 }}>\n            <Card\n                cover={post.Images[0] && <PostImages images={post.Images} />}\n                actions={[\n                    <RetweetOutlined key=\"retweet\" />,\n                    liked ? (\n                        <HeartTwoTone\n                            twoToneColor=\"ev2f96\"\n                            onClick={onToggleLike}\n                        />\n                    ) : (\n                        <HeartOutlined key=\"heart\" onClick={onToggleLike} />\n                    ),\n                    <MessageOutlined onClick={onToggleComment} key=\"comment\" />,\n                    <Popover\n                        key=\"more\"\n                        content={\n                            <Button.Group>\n                                {id && post.User.id === id ? (\n                                    <>\n                                        <Button>수정</Button>\n                                        <Button\n                                            type=\"danger\"\n                                            onClick={onRemovePost}\n                                        >\n                                            삭제\n                                        </Button>\n                                    </>\n                                ) : (\n                                    <Button>신고</Button>\n                                )}\n                            </Button.Group>\n                        }\n                    >\n                        <EllipsisOutlined />\n                    </Popover>,\n                ]}\n            >\n                <Card.Meta\n                    avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\n                    title={post.User.nickname}\n                    description={<PostCardContent postData={post.content} />}\n                />\n            </Card>\n            {commentFormOpened && (\n                <div>\n                    {/* 어떤 게시글에 댓글을 남기는지.. */}\n                    <CommentForm post={post} />\n                    <List\n                        header={`${post.Comments.length}개의 댓글`}\n                        itemLayout=\"horizontal\"\n                        dataSource={post.Comments}\n                        renderItem={(item) => (\n                            <li>\n                                <Comment\n                                    author={item.User.nickname} //댓글쓴사람\n                                    avatar={\n                                        <Avatar>{item.User.nickname[0]}</Avatar> //아바타\n                                    }\n                                    content={item.content} //\n                                />\n                            </li>\n                        )}\n                    />\n                </div>\n            )}\n            {/* <CommentForm />\n            <Comments /> */}\n        </div>\n    );\n};\n\nPostCard.propTypes = {\n    post: PropTypes.shape({\n        id: PropTypes.number,\n        User: PropTypes.object,\n        content: PropTypes.string,\n        createdAt: PropTypes.object,\n        Comment: PropTypes.arrayOf(PropTypes.object),\n        Images: PropTypes.arrayOf(PropTypes.object),\n    }).isRequired,\n};\n\nexport default PostCard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}