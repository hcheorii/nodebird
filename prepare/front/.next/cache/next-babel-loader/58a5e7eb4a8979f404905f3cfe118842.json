{"ast":null,"code":"import { produce } from \"immer\";\nexport const initialValue = {\n  loadUserLoading: false,\n  //로그인 정보 불러오기\n  loadUserDone: false,\n  loadUserError: null,\n  logInLoading: false,\n  //로그인 시도중\n  logInDone: false,\n  logInError: null,\n  logOutLoading: false,\n  //로그아웃 시도중\n  logOutDone: false,\n  logOutError: null,\n  signUpLoading: false,\n  //회원가입 시도중\n  signUpDone: false,\n  signUpError: null,\n  followLoading: false,\n  // 닉네임 변경 시도중\n  followDone: false,\n  followError: null,\n  unfollowLoading: false,\n  // 닉네임 변경 시도중\n  unfollowDone: false,\n  unfollowError: null,\n  loadFollowersLoading: false,\n  // 닉네임 변경 시도중\n  loadFollowersDone: false,\n  loadFollowersError: null,\n  loadFollowingsLoading: false,\n  // 닉네임 변경 시도중\n  loadFollowingsDone: false,\n  loadFollowingsError: null,\n  me: null,\n  signUpData: {},\n  LoginData: {}\n};\nexport const LOAD_MY_INFO_REQUEST = \"LOAD_MY_INFO_REQUEST\";\nexport const LOAD_MY_INFO_SUCCESS = \"LOAD_MY_INFO_SUCCESS\";\nexport const LOAD_MY_INFO_FAILURE = \"LOAD_MY_INFO_FAILURE\";\nexport const REMOVE_FOLLOWER_REQUEST = \"REMOVE_FOLLOWER_REQUEST\";\nexport const REMOVE_FOLLOWER_SUCCESS = \"REMOVE_FOLLOWER_SUCCESS\";\nexport const REMOVE_FOLLOWER_FAILURE = \"REMOVE_FOLLOWER_FAILURE\";\nexport const LOAD_FOLLOWERS_REQUEST = \"LOAD_FOLLOWERS_REQUEST\";\nexport const LOAD_FOLLOWERS_SUCCESS = \"LOAD_FOLLOWERS_SUCCESS\";\nexport const LOAD_FOLLOWERS_FAILURE = \"LOAD_FOLLOWERS_FAILURE\";\nexport const LOAD_FOLLOWINGS_REQUEST = \"LOAD_FOLLWINGS_REQUEST\";\nexport const LOAD_FOLLOWINGS_SUCCESS = \"LOAD_FOLLWINGS_SUCCESS\";\nexport const LOAD_FOLLOWINGS_FAILURE = \"LOAD_FOLLWINGS_FAILURE\";\nexport const LOG_IN_REQUEST = \"LOG_IN_REQUEST\";\nexport const LOG_IN_SUCCESS = \"LOG_IN_SUCCESS\";\nexport const LOG_IN_FAILURE = \"LOG_IN_FAILURE\";\nexport const LOG_OUT_REQUEST = \"LOG_OUT_REQUEST\";\nexport const LOG_OUT_SUCCESS = \"LOG_OUT_SUCCESS\";\nexport const LOG_OUT_FAILURE = \"LOG_OUT_FAILURE\";\nexport const SIGN_UP_REQUEST = \"SIGN_UP_REQUEST\";\nexport const SIGN_UP_SUCCESS = \"SIGN_UP_SUCCESS\";\nexport const SIGN_UP_FAILURE = \"SIGN_UP_FAILURE\";\nexport const CHANGE_NICKNAME_REQUEST = \"CHANGE_NICKNAME_REQUEST\";\nexport const CHANGE_NICKNAME_SUCCESS = \"CHANGE_NICKNAME_SUCCESS\";\nexport const CHANGE_NICKNAME_FAILURE = \"CHANGE_NICKNAME_FAILURE\";\nexport const FOLLOW_REQUEST = \"FOLLOW_REQUEST\";\nexport const FOLLOW_SUCCESS = \"FOLLOW_SUCCESS\";\nexport const FOLLOW_FAILURE = \"FOLLOW_FAILURE\";\nexport const UNFOLLOW_REQUEST = \"UNFOLLOW_REQUEST\";\nexport const UNFOLLOW_SUCCESS = \"UNFOLLOW_SUCCESS\";\nexport const UNFOLLOW_FAILURE = \"UNFOLLOW_FAILURE\";\nexport const ADD_POST_TO_ME = \"ADD_POST_TO_ME\"; //user reducer상태를 바꾸는 액션\nexport const REMOVE_POST_OF_ME = \"REMOVE_POST_OF_ME\"; //user reducer상태를 바꾸는 액션\n\nexport const loginRequestAction = data => {\n  return {\n    type: LOG_IN_REQUEST,\n    data\n  };\n};\nexport const logoutRequestAction = () => {\n  return {\n    type: LOG_OUT_REQUEST\n  };\n};\nexport default ((state = initialValue, action) => {\n  //리듀서란 이전 상태를 액션을 통해 다음 상태로 만들어내는 함수(단, 불변성은 지키면서)\n  //draft는 불변성 상관없이 바꾸면 immer가 알아서 불변성있게 만들어준다.\n  return produce(state, draft => {\n    switch (action.type) {\n      //유저정보 가져오기\n      case LOAD_MY_INFO_REQUEST:\n        draft.loadUserLoading = true;\n        draft.loadUserError = null;\n        draft.loadUserDone = false;\n        break;\n      case LOAD_MY_INFO_SUCCESS:\n        draft.loadUserLoading = false;\n        draft.me = action.data; //me가 null이면 로그인되어있지 않음\n        draft.loadUserDone = true;\n        break;\n      case LOAD_MY_INFO_FAILURE:\n        draft.loadUserLoading = false;\n        draft.loadUserError = action.error;\n        break;\n\n      //팔로우 시도중\n      case FOLLOW_REQUEST:\n        draft.followLoading = true;\n        draft.followError = null;\n        draft.followDone = false;\n        break;\n      case FOLLOW_SUCCESS:\n        draft.followLoading = false;\n        draft.me.Followings.push({\n          id: action.data.UserId\n        });\n        draft.followDone = true;\n        break;\n      case FOLLOW_FAILURE:\n        draft.followLoading = false;\n        draft.followError = action.error;\n        break;\n\n      //언팔로우 시도중\n      case UNFOLLOW_REQUEST:\n        draft.unfollowLoading = true;\n        draft.unfollowError = null;\n        draft.unfollowDone = false;\n        break;\n      case UNFOLLOW_SUCCESS:\n        draft.unfollowLoading = false;\n        draft.me.Followings = draft.me.Followings.filter(v => v.id !== action.data.UserId); //그 해당 사람만 빠지게 된다.\n        draft.unfollowDone = true;\n        break;\n      case UNFOLLOW_FAILURE:\n        draft.unfollowLoading = false;\n        draft.unfollowError = action.error;\n        break;\n      //로그인\n      case LOG_IN_REQUEST:\n        draft.logInLoading = true;\n        draft.logInError = null;\n        draft.logInDone = false;\n        break;\n      case LOG_IN_SUCCESS:\n        draft.logInLoading = false;\n        draft.me = action.data; //더미데이터\n        draft.logInDone = true;\n        break;\n      case LOG_IN_FAILURE:\n        draft.logInLoading = false;\n        draft.logInError = action.error;\n        break;\n\n      //로그아웃\n      case LOG_OUT_REQUEST:\n        draft.logOutLoading = true; //로그아웃 시도중\n        draft.logOutDone = false;\n        draft.logOutError = null;\n        break;\n      case LOG_OUT_SUCCESS:\n        draft.logOutLoading = false; //로그아웃 시도중\n        draft.logOutDone = true;\n        draft.me = null;\n        break;\n      case LOG_OUT_FAILURE:\n        draft.logOutLoading = false; //로그아웃 시도중\n        draft.logOutError = action.error;\n        break;\n\n      //회원가입\n      case SIGN_UP_REQUEST:\n        draft.signUpLoading = true; //로그인 시도중\n        draft.signUpDone = false;\n        draft.signUpError = null;\n        break;\n      case SIGN_UP_SUCCESS:\n        draft.signUpLoading = false; //로그인 시도중\n        draft.signUpDone = true;\n        break;\n      case SIGN_UP_FAILURE:\n        draft.signUpLoading = false; //로그인 시도중\n        draft.signUpError = action.error;\n        break;\n\n      //닉네임 변경\n      case CHANGE_NICKNAME_REQUEST:\n        draft.changeNicknameLoading = true;\n        draft.changeNicknameDone = false;\n        draft.changeNicknameError = null;\n        break;\n      case CHANGE_NICKNAME_SUCCESS:\n        draft.changeNicknameLoading = false;\n        draft.changeNicknameDone = true;\n        draft.me.nickname = action.data.nickname;\n        break;\n      case CHANGE_NICKNAME_FAILURE:\n        draft.changeNicknameLoading = false;\n        draft.changeNicknameError = action.error;\n        break;\n      case ADD_POST_TO_ME:\n        draft.me.Posts.unshift({\n          id: action.data\n        });\n      // return {\n      //     ...state,\n      //     me: {\n      //         ...state.me,\n      //         Posts: [{ id: action.data }, ...state.me.Posts],\n      //     },\n      // };\n      case REMOVE_POST_OF_ME:\n        draft.me.Posts = draft.me.Posts.filter(v => v.id !== action.data);\n        break;\n      // return {\n      //     ...state,\n      //     me: {\n      //         ...state.me,\n      //         Posts: state.me.Posts.filter(\n      //             (v) => v.id !== action.data\n      //         ),\n      //     },\n      // };\n\n      //팔로워불러오기\n      case LOAD_FOLLOWERS_REQUEST:\n        draft.loadFollowersLoading = true;\n        draft.loadFollowersError = null;\n        draft.loadFollowersDone = false;\n        break;\n      case LOAD_FOLLOWERS_SUCCESS:\n        draft.loadFollowersLoading = false;\n        draft.me.Followers = action.data;\n        draft.loadFollowersDone = true;\n        break;\n      case LOAD_FOLLOWERS_FAILURE:\n        draft.loadFollowersLoading = false;\n        draft.loadFollowersError = action.error;\n        break;\n\n      //팔로잉들 불러오기\n      case LOAD_FOLLOWINGS_REQUEST:\n        draft.loadFollowingsLoading = true;\n        draft.loadFollowingsError = null;\n        draft.loadFollowingsDone = false;\n        break;\n      case LOAD_FOLLOWINGS_SUCCESS:\n        draft.loadFollowingsLoading = false;\n        draft.me.Followings = action.data;\n        draft.loadFollowingsDone = true;\n        break;\n      case LOAD_FOLLOWINGS_FAILURE:\n        draft.loadFollowingsLoading = false;\n        draft.loadFollowingsError = action.error;\n        break;\n\n      //팔로워 삭제\n      case REMOVE_FOLLOWER_REQUEST:\n        draft.removeFollowerLoading = true;\n        draft.removeFollowerError = null;\n        draft.removeFollowerDone = false;\n        break;\n      case REMOVE_FOLLOWER_SUCCESS:\n        draft.removeFollowerLoading = false;\n        draft.me.Followers = draft.me.Followers.filter(v => v.id !== action.data.UserId); //그 해당 사람만 빠지게 된다.\n        draft.removeFollowerDone = true;\n        break;\n      case REMOVE_FOLLOWER_FAILURE:\n        draft.removeFollowerLoading = false;\n        draft.removeFollowerError = action.error;\n        break;\n      default:\n        break;\n    }\n  });\n});","map":{"version":3,"names":["produce","initialValue","loadUserLoading","loadUserDone","loadUserError","logInLoading","logInDone","logInError","logOutLoading","logOutDone","logOutError","signUpLoading","signUpDone","signUpError","followLoading","followDone","followError","unfollowLoading","unfollowDone","unfollowError","loadFollowersLoading","loadFollowersDone","loadFollowersError","loadFollowingsLoading","loadFollowingsDone","loadFollowingsError","me","signUpData","LoginData","LOAD_MY_INFO_REQUEST","LOAD_MY_INFO_SUCCESS","LOAD_MY_INFO_FAILURE","REMOVE_FOLLOWER_REQUEST","REMOVE_FOLLOWER_SUCCESS","REMOVE_FOLLOWER_FAILURE","LOAD_FOLLOWERS_REQUEST","LOAD_FOLLOWERS_SUCCESS","LOAD_FOLLOWERS_FAILURE","LOAD_FOLLOWINGS_REQUEST","LOAD_FOLLOWINGS_SUCCESS","LOAD_FOLLOWINGS_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","CHANGE_NICKNAME_REQUEST","CHANGE_NICKNAME_SUCCESS","CHANGE_NICKNAME_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","FOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","ADD_POST_TO_ME","REMOVE_POST_OF_ME","loginRequestAction","data","type","logoutRequestAction","state","action","draft","error","Followings","push","id","UserId","filter","v","changeNicknameLoading","changeNicknameDone","changeNicknameError","nickname","Posts","unshift","Followers","removeFollowerLoading","removeFollowerError","removeFollowerDone"],"sources":["/Users/ihyeoncheol/Desktop/nodebird_project/prepare/front/reducers/user.js"],"sourcesContent":["import { produce } from \"immer\";\n\nexport const initialValue = {\n    loadUserLoading: false, //로그인 정보 불러오기\n    loadUserDone: false,\n    loadUserError: null,\n\n    logInLoading: false, //로그인 시도중\n    logInDone: false,\n    logInError: null,\n\n    logOutLoading: false, //로그아웃 시도중\n    logOutDone: false,\n    logOutError: null,\n\n    signUpLoading: false, //회원가입 시도중\n    signUpDone: false,\n    signUpError: null,\n\n    followLoading: false, // 닉네임 변경 시도중\n    followDone: false,\n    followError: null,\n\n    unfollowLoading: false, // 닉네임 변경 시도중\n    unfollowDone: false,\n    unfollowError: null,\n\n    loadFollowersLoading: false, // 닉네임 변경 시도중\n    loadFollowersDone: false,\n    loadFollowersError: null,\n\n    loadFollowingsLoading: false, // 닉네임 변경 시도중\n    loadFollowingsDone: false,\n    loadFollowingsError: null,\n\n    me: null,\n    signUpData: {},\n    LoginData: {},\n};\nexport const LOAD_MY_INFO_REQUEST = \"LOAD_MY_INFO_REQUEST\";\nexport const LOAD_MY_INFO_SUCCESS = \"LOAD_MY_INFO_SUCCESS\";\nexport const LOAD_MY_INFO_FAILURE = \"LOAD_MY_INFO_FAILURE\";\n\nexport const REMOVE_FOLLOWER_REQUEST = \"REMOVE_FOLLOWER_REQUEST\";\nexport const REMOVE_FOLLOWER_SUCCESS = \"REMOVE_FOLLOWER_SUCCESS\";\nexport const REMOVE_FOLLOWER_FAILURE = \"REMOVE_FOLLOWER_FAILURE\";\n\nexport const LOAD_FOLLOWERS_REQUEST = \"LOAD_FOLLOWERS_REQUEST\";\nexport const LOAD_FOLLOWERS_SUCCESS = \"LOAD_FOLLOWERS_SUCCESS\";\nexport const LOAD_FOLLOWERS_FAILURE = \"LOAD_FOLLOWERS_FAILURE\";\n\nexport const LOAD_FOLLOWINGS_REQUEST = \"LOAD_FOLLWINGS_REQUEST\";\nexport const LOAD_FOLLOWINGS_SUCCESS = \"LOAD_FOLLWINGS_SUCCESS\";\nexport const LOAD_FOLLOWINGS_FAILURE = \"LOAD_FOLLWINGS_FAILURE\";\n\nexport const LOG_IN_REQUEST = \"LOG_IN_REQUEST\";\nexport const LOG_IN_SUCCESS = \"LOG_IN_SUCCESS\";\nexport const LOG_IN_FAILURE = \"LOG_IN_FAILURE\";\n\nexport const LOG_OUT_REQUEST = \"LOG_OUT_REQUEST\";\nexport const LOG_OUT_SUCCESS = \"LOG_OUT_SUCCESS\";\nexport const LOG_OUT_FAILURE = \"LOG_OUT_FAILURE\";\n\nexport const SIGN_UP_REQUEST = \"SIGN_UP_REQUEST\";\nexport const SIGN_UP_SUCCESS = \"SIGN_UP_SUCCESS\";\nexport const SIGN_UP_FAILURE = \"SIGN_UP_FAILURE\";\n\nexport const CHANGE_NICKNAME_REQUEST = \"CHANGE_NICKNAME_REQUEST\";\nexport const CHANGE_NICKNAME_SUCCESS = \"CHANGE_NICKNAME_SUCCESS\";\nexport const CHANGE_NICKNAME_FAILURE = \"CHANGE_NICKNAME_FAILURE\";\n\nexport const FOLLOW_REQUEST = \"FOLLOW_REQUEST\";\nexport const FOLLOW_SUCCESS = \"FOLLOW_SUCCESS\";\nexport const FOLLOW_FAILURE = \"FOLLOW_FAILURE\";\n\nexport const UNFOLLOW_REQUEST = \"UNFOLLOW_REQUEST\";\nexport const UNFOLLOW_SUCCESS = \"UNFOLLOW_SUCCESS\";\nexport const UNFOLLOW_FAILURE = \"UNFOLLOW_FAILURE\";\n\nexport const ADD_POST_TO_ME = \"ADD_POST_TO_ME\"; //user reducer상태를 바꾸는 액션\nexport const REMOVE_POST_OF_ME = \"REMOVE_POST_OF_ME\"; //user reducer상태를 바꾸는 액션\n\nexport const loginRequestAction = (data) => {\n    return {\n        type: LOG_IN_REQUEST,\n        data,\n    };\n};\n\nexport const logoutRequestAction = () => {\n    return {\n        type: LOG_OUT_REQUEST,\n    };\n};\n\nexport default (state = initialValue, action) => {\n    //리듀서란 이전 상태를 액션을 통해 다음 상태로 만들어내는 함수(단, 불변성은 지키면서)\n    //draft는 불변성 상관없이 바꾸면 immer가 알아서 불변성있게 만들어준다.\n    return produce(state, (draft) => {\n        switch (action.type) {\n            //유저정보 가져오기\n            case LOAD_MY_INFO_REQUEST:\n                draft.loadUserLoading = true;\n                draft.loadUserError = null;\n                draft.loadUserDone = false;\n                break;\n            case LOAD_MY_INFO_SUCCESS:\n                draft.loadUserLoading = false;\n                draft.me = action.data; //me가 null이면 로그인되어있지 않음\n                draft.loadUserDone = true;\n                break;\n            case LOAD_MY_INFO_FAILURE:\n                draft.loadUserLoading = false;\n                draft.loadUserError = action.error;\n                break;\n\n            //팔로우 시도중\n            case FOLLOW_REQUEST:\n                draft.followLoading = true;\n                draft.followError = null;\n                draft.followDone = false;\n                break;\n            case FOLLOW_SUCCESS:\n                draft.followLoading = false;\n                draft.me.Followings.push({ id: action.data.UserId });\n                draft.followDone = true;\n                break;\n            case FOLLOW_FAILURE:\n                draft.followLoading = false;\n                draft.followError = action.error;\n                break;\n\n            //언팔로우 시도중\n            case UNFOLLOW_REQUEST:\n                draft.unfollowLoading = true;\n                draft.unfollowError = null;\n                draft.unfollowDone = false;\n                break;\n            case UNFOLLOW_SUCCESS:\n                draft.unfollowLoading = false;\n                draft.me.Followings = draft.me.Followings.filter(\n                    (v) => v.id !== action.data.UserId\n                ); //그 해당 사람만 빠지게 된다.\n                draft.unfollowDone = true;\n                break;\n            case UNFOLLOW_FAILURE:\n                draft.unfollowLoading = false;\n                draft.unfollowError = action.error;\n                break;\n            //로그인\n            case LOG_IN_REQUEST:\n                draft.logInLoading = true;\n                draft.logInError = null;\n                draft.logInDone = false;\n                break;\n            case LOG_IN_SUCCESS:\n                draft.logInLoading = false;\n                draft.me = action.data; //더미데이터\n                draft.logInDone = true;\n                break;\n            case LOG_IN_FAILURE:\n                draft.logInLoading = false;\n                draft.logInError = action.error;\n                break;\n\n            //로그아웃\n            case LOG_OUT_REQUEST:\n                draft.logOutLoading = true; //로그아웃 시도중\n                draft.logOutDone = false;\n                draft.logOutError = null;\n                break;\n            case LOG_OUT_SUCCESS:\n                draft.logOutLoading = false; //로그아웃 시도중\n                draft.logOutDone = true;\n                draft.me = null;\n                break;\n            case LOG_OUT_FAILURE:\n                draft.logOutLoading = false; //로그아웃 시도중\n                draft.logOutError = action.error;\n                break;\n\n            //회원가입\n            case SIGN_UP_REQUEST:\n                draft.signUpLoading = true; //로그인 시도중\n                draft.signUpDone = false;\n                draft.signUpError = null;\n                break;\n            case SIGN_UP_SUCCESS:\n                draft.signUpLoading = false; //로그인 시도중\n                draft.signUpDone = true;\n                break;\n            case SIGN_UP_FAILURE:\n                draft.signUpLoading = false; //로그인 시도중\n                draft.signUpError = action.error;\n                break;\n\n            //닉네임 변경\n            case CHANGE_NICKNAME_REQUEST:\n                draft.changeNicknameLoading = true;\n                draft.changeNicknameDone = false;\n                draft.changeNicknameError = null;\n                break;\n            case CHANGE_NICKNAME_SUCCESS:\n                draft.changeNicknameLoading = false;\n                draft.changeNicknameDone = true;\n                draft.me.nickname = action.data.nickname;\n                break;\n            case CHANGE_NICKNAME_FAILURE:\n                draft.changeNicknameLoading = false;\n                draft.changeNicknameError = action.error;\n                break;\n\n            case ADD_POST_TO_ME:\n                draft.me.Posts.unshift({ id: action.data });\n            // return {\n            //     ...state,\n            //     me: {\n            //         ...state.me,\n            //         Posts: [{ id: action.data }, ...state.me.Posts],\n            //     },\n            // };\n            case REMOVE_POST_OF_ME:\n                draft.me.Posts = draft.me.Posts.filter(\n                    (v) => v.id !== action.data\n                );\n                break;\n            // return {\n            //     ...state,\n            //     me: {\n            //         ...state.me,\n            //         Posts: state.me.Posts.filter(\n            //             (v) => v.id !== action.data\n            //         ),\n            //     },\n            // };\n\n            //팔로워불러오기\n            case LOAD_FOLLOWERS_REQUEST:\n                draft.loadFollowersLoading = true;\n                draft.loadFollowersError = null;\n                draft.loadFollowersDone = false;\n                break;\n            case LOAD_FOLLOWERS_SUCCESS:\n                draft.loadFollowersLoading = false;\n                draft.me.Followers = action.data;\n                draft.loadFollowersDone = true;\n                break;\n            case LOAD_FOLLOWERS_FAILURE:\n                draft.loadFollowersLoading = false;\n                draft.loadFollowersError = action.error;\n                break;\n\n            //팔로잉들 불러오기\n            case LOAD_FOLLOWINGS_REQUEST:\n                draft.loadFollowingsLoading = true;\n                draft.loadFollowingsError = null;\n                draft.loadFollowingsDone = false;\n                break;\n            case LOAD_FOLLOWINGS_SUCCESS:\n                draft.loadFollowingsLoading = false;\n                draft.me.Followings = action.data;\n                draft.loadFollowingsDone = true;\n                break;\n            case LOAD_FOLLOWINGS_FAILURE:\n                draft.loadFollowingsLoading = false;\n                draft.loadFollowingsError = action.error;\n                break;\n\n            //팔로워 삭제\n            case REMOVE_FOLLOWER_REQUEST:\n                draft.removeFollowerLoading = true;\n                draft.removeFollowerError = null;\n                draft.removeFollowerDone = false;\n                break;\n            case REMOVE_FOLLOWER_SUCCESS:\n                draft.removeFollowerLoading = false;\n                draft.me.Followers = draft.me.Followers.filter(\n                    (v) => v.id !== action.data.UserId\n                ); //그 해당 사람만 빠지게 된다.\n                draft.removeFollowerDone = true;\n                break;\n            case REMOVE_FOLLOWER_FAILURE:\n                draft.removeFollowerLoading = false;\n                draft.removeFollowerError = action.error;\n                break;\n            default:\n                break;\n        }\n    });\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}