{"ast":null,"code":"var _jsxFileName = \"/Users/ihyeoncheol/Desktop/nodebird_project/prepare/front/components/PostForm.js\";\nvar __jsx = React.createElement;\nimport { Form, Input, Button } from \"antd\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport React, { useCallback, useRef, useEffect } from \"react\";\nimport { addPost } from \"../reducers/post\";\nimport useInput from \"../hooks/useInput\";\nconst PostForm = () => {\n  const dispatch = useDispatch();\n  const [text, onChangeText, setText] = useInput(\"\");\n  const {\n    imagePaths,\n    addPostDone\n  } = useSelector(state => state.post);\n  const imageInput = useRef();\n  //ref는 실제DOM에 접근하기 위해서 사용\n\n  // useEffect(() => {\n  //     if (addPostDone) {\n  //         setText(\"\");\n  //     }\n  // }, [addPostDone]);\n\n  const onSubmit = useCallback(() => {\n    dispatch(addPost(text));\n    // setText(\"\"); //여기서 이렇게 초기화해줄 경우에 서버쪽에서 응답으로 오류가 났을때 게시물이 잘 올라가지 않았음에도 초기화되어버림.\n    //그래서 위에 useEffect부분을 따로 작성해줌.\n    console.log(text);\n  }, []);\n  const onClickImageUpload = useCallback(() => {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  return __jsx(Form, {\n    style: {\n      margin: \"10px 0 20px\"\n    },\n    encType: \"multipart/form-data\",\n    onFinish: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, __jsx(Input.TextArea, {\n    value: text,\n    onChange: onChangeText,\n    maxLength: 140,\n    placeholder: \"\\uC5B4\\uB5A4 \\uC2E0\\uAE30\\uD55C \\uC77C\\uC774 \\uC788\\uC5C8\\uB098\\uC694?\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    type: \"file\",\n    multiple: true,\n    hidden: true,\n    ref: imageInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }), __jsx(Button, {\n    onClick: onClickImageUpload,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"), __jsx(Button, {\n    type: \"primary\",\n    style: {\n      float: \"right\"\n    },\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, \"\\uC9F9\\uC9F9\")), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, imagePaths.map(v => {\n    __jsx(\"div\", {\n      key: v,\n      style: {\n        display: \"inline-block\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }\n    }, __jsx(\"img\", {\n      src: v,\n      style: {\n        width: \"200px\"\n      },\n      alt: v,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 25\n      }\n    }));\n  })));\n};\nexport default PostForm;","map":{"version":3,"names":["Form","Input","Button","useSelector","useDispatch","React","useCallback","useRef","useEffect","addPost","useInput","PostForm","dispatch","text","onChangeText","setText","imagePaths","addPostDone","state","post","imageInput","onSubmit","console","log","onClickImageUpload","current","click","__jsx","style","margin","encType","onFinish","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","TextArea","value","onChange","maxLength","placeholder","type","multiple","hidden","ref","onClick","float","htmlType","map","v","key","display","src","width","alt"],"sources":["/Users/ihyeoncheol/Desktop/nodebird_project/prepare/front/components/PostForm.js"],"sourcesContent":["import { Form, Input, Button } from \"antd\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport React, { useCallback, useRef, useEffect } from \"react\";\nimport { addPost } from \"../reducers/post\";\nimport useInput from \"../hooks/useInput\";\n\nconst PostForm = () => {\n    const dispatch = useDispatch();\n    const [text, onChangeText, setText] = useInput(\"\");\n    const { imagePaths, addPostDone } = useSelector((state) => state.post);\n\n    const imageInput = useRef();\n    //ref는 실제DOM에 접근하기 위해서 사용\n\n    // useEffect(() => {\n    //     if (addPostDone) {\n    //         setText(\"\");\n    //     }\n    // }, [addPostDone]);\n\n    const onSubmit = useCallback(() => {\n        dispatch(addPost(text));\n        // setText(\"\"); //여기서 이렇게 초기화해줄 경우에 서버쪽에서 응답으로 오류가 났을때 게시물이 잘 올라가지 않았음에도 초기화되어버림.\n        //그래서 위에 useEffect부분을 따로 작성해줌.\n        console.log(text);\n    }, []);\n\n    const onClickImageUpload = useCallback(() => {\n        imageInput.current.click();\n    }, [imageInput.current]);\n\n    return (\n        <Form\n            style={{ margin: \"10px 0 20px\" }}\n            encType=\"multipart/form-data\"\n            onFinish={onSubmit}\n        >\n            <Input.TextArea\n                value={text}\n                onChange={onChangeText}\n                maxLength={140}\n                placeholder=\"어떤 신기한 일이 있었나요?\"\n            />\n            <div>\n                <input type=\"file\" multiple hidden ref={imageInput} />\n                <Button onClick={onClickImageUpload}>이미지 업로드</Button>\n                <Button\n                    type=\"primary\"\n                    style={{ float: \"right\" }}\n                    htmlType=\"submit\"\n                >\n                    짹짹\n                </Button>\n            </div>\n            <div>\n                {imagePaths.map((v) => {\n                    <div key={v} style={{ display: \"inline-block\" }}>\n                        <img src={v} style={{ width: \"200px\" }} alt={v} />\n                    </div>;\n                })}\n            </div>\n        </Form>\n    );\n};\n\nexport default PostForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}