{"ast":null,"code":"import { createWrapper } from \"next-redux-wrapper\";\nimport reducer from \"../reducers\";\nimport { createStore, compose, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunkMiddleware from \"redux-thunk\"; //redux-thunk 미들웨어란 비동기 작업을 처리 할때 가장 많이 사용하는 미들웨어이다.\n\nconst loggerMiddleware = ({\n  dispatch,\n  getState\n}) => next => action => {\n  if (typeof action === \"function\") {\n    return action(dispatch, getState, extraArgument);\n  }\n};\nconst configureStore = () => {\n  const middlewares = [thunkMiddleware];\n  const enhancer = false ? compose(applyMiddleware(...middlewares)) //배포용\n  : composeWithDevTools(applyMiddleware(...middlewares)); //개발용\n  const store = createStore(reducer, enhancer);\n  store.dispatch({\n    type: \"CHANGE_NICKNAME\",\n    data: \"tuk\"\n  });\n  return store;\n};\nconst wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"names":["createWrapper","reducer","createStore","compose","applyMiddleware","composeWithDevTools","thunkMiddleware","loggerMiddleware","dispatch","getState","next","action","extraArgument","configureStore","middlewares","enhancer","store","type","data","wrapper","debug"],"sources":["/Users/ihyeoncheol/Desktop/nodebird_project/prepare/front/store/configureStore.js"],"sourcesContent":["import { createWrapper } from \"next-redux-wrapper\";\nimport reducer from \"../reducers\";\nimport { createStore, compose, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunkMiddleware from \"redux-thunk\"; //redux-thunk 미들웨어란 비동기 작업을 처리 할때 가장 많이 사용하는 미들웨어이다.\n\nconst loggerMiddleware =\n    ({ dispatch, getState }) =>\n    (next) =>\n    (action) => {\n        if (typeof action === \"function\") {\n            return action(dispatch, getState, extraArgument);\n        }\n    };\nconst configureStore = () => {\n    const middlewares = [thunkMiddleware];\n    const enhancer =\n        process.env.NODE_ENV === \"production\"\n            ? compose(applyMiddleware(...middlewares)) //배포용\n            : composeWithDevTools(applyMiddleware(...middlewares)); //개발용\n    const store = createStore(reducer, enhancer);\n    store.dispatch({\n        type: \"CHANGE_NICKNAME\",\n        data: \"tuk\",\n    });\n    return store;\n};\n\nconst wrapper = createWrapper(configureStore, {\n    debug: process.env.NODE_ENV === \"development\",\n});\nexport default wrapper;\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,oBAAoB;AAClD,OAAOC,OAAO,MAAM,aAAa;AACjC,SAASC,WAAW,EAAEC,OAAO,EAAEC,eAAe,QAAQ,OAAO;AAC7D,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,OAAOC,eAAe,MAAM,aAAa,CAAC,CAAC;;AAE3C,MAAMC,gBAAgB,GAClBA,CAAC;EAAEC,QAAQ;EAAEC;AAAS,CAAC,KACtBC,IAAI,IACJC,MAAM,IAAK;EACR,IAAI,OAAOA,MAAM,KAAK,UAAU,EAAE;IAC9B,OAAOA,MAAM,CAACH,QAAQ,EAAEC,QAAQ,EAAEG,aAAa,CAAC;EACpD;AACJ,CAAC;AACL,MAAMC,cAAc,GAAGA,CAAA,KAAM;EACzB,MAAMC,WAAW,GAAG,CAACR,eAAe,CAAC;EACrC,MAAMS,QAAQ,GACV,QACMZ,OAAO,CAACC,eAAe,CAAC,GAAGU,WAAW,CAAC,CAAC,CAAC;EAAA,EACzCT,mBAAmB,CAACD,eAAe,CAAC,GAAGU,WAAW,CAAC,CAAC,CAAC,CAAC;EAChE,MAAME,KAAK,GAAGd,WAAW,CAACD,OAAO,EAAEc,QAAQ,CAAC;EAC5CC,KAAK,CAACR,QAAQ,CAAC;IACXS,IAAI,EAAE,iBAAiB;IACvBC,IAAI,EAAE;EACV,CAAC,CAAC;EACF,OAAOF,KAAK;AAChB,CAAC;AAED,MAAMG,OAAO,GAAGnB,aAAa,CAACa,cAAc,EAAE;EAC1CO,KAAK;AACT,CAAC,CAAC;AACF,eAAeD,OAAO"},"metadata":{},"sourceType":"module"}