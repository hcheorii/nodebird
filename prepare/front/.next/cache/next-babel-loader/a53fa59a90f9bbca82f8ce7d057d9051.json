{"ast":null,"code":"import { all, fork, call, put, take, takeEvery } from \"redux-saga/effects\"; //saga의 이펙트 //all은 fork, call을 한번에 실행해준다. //put을 디스패치라고 생각하면 마음이 편한다.\n//call과 Fork의 차이는 동기, 비동기 차이이다. call은 응답이 올때까지 대기.(일종의 브레이크)\nimport axios from \"axios\";\nfunction logInAPI() {\n  return axios.post(\"api/login\");\n}\nfunction* logIn(action) {\n  try {\n    const result = yield call(logInAPI, action.data);\n    yield put({\n      //요청성공\n      type: \"LOG_IN_SUCCESS\",\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      //요청실패\n      type: \"LOG_IN_FAILURE\",\n      data: err.response.data\n    });\n  }\n}\nfunction addPostAPI(data) {\n  return axios.post(\"/api/post\", data);\n}\nfunction* addPost(action) {\n  try {\n    const result = yield call(addPostAPI, action.data);\n    yield put({\n      //요청성공\n      type: \"ADD_POST_SUCCESS\",\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      //요청실패\n      type: \"ADD_POST_FAILURE\",\n      data: err.response.data\n    });\n  }\n}\nfunction* watchLogIn() {\n  yield takeEvery(\"LOG_IN_REQUEST\", logIn); //while대신에 takeEvery\n}\n\nfunction* watchLogOut() {\n  yield takeEvery(\"LOG_OUT_REQUEST\", logOut);\n}\nfunction* watchAddPost() {\n  yield takeEvery(\"ADD_POST_REQUEST\");\n}\nexport default function* rootSaga() {\n  yield all([fork(watchLogIn), fork(watchLogOut), fork(watchAddPost)]);\n}","map":{"version":3,"names":["all","fork","call","put","take","takeEvery","axios","logInAPI","post","logIn","action","result","data","type","err","response","addPostAPI","addPost","watchLogIn","watchLogOut","logOut","watchAddPost","rootSaga"],"sources":["/Users/ihyeoncheol/Desktop/nodebird_project/prepare/front/sagas/index.js"],"sourcesContent":["import { all, fork, call, put, take, takeEvery } from \"redux-saga/effects\"; //saga의 이펙트 //all은 fork, call을 한번에 실행해준다. //put을 디스패치라고 생각하면 마음이 편한다.\n//call과 Fork의 차이는 동기, 비동기 차이이다. call은 응답이 올때까지 대기.(일종의 브레이크)\nimport axios from \"axios\";\nfunction logInAPI() {\n    return axios.post(\"api/login\");\n}\n\nfunction* logIn(action) {\n    try {\n        const result = yield call(logInAPI, action.data);\n        yield put({\n            //요청성공\n            type: \"LOG_IN_SUCCESS\",\n            data: result.data,\n        });\n    } catch (err) {\n        yield put({\n            //요청실패\n            type: \"LOG_IN_FAILURE\",\n            data: err.response.data,\n        });\n    }\n}\n\nfunction addPostAPI(data) {\n    return axios.post(\"/api/post\", data);\n}\n\nfunction* addPost(action) {\n    try {\n        const result = yield call(addPostAPI, action.data);\n        yield put({\n            //요청성공\n            type: \"ADD_POST_SUCCESS\",\n            data: result.data,\n        });\n    } catch (err) {\n        yield put({\n            //요청실패\n            type: \"ADD_POST_FAILURE\",\n            data: err.response.data,\n        });\n    }\n}\n\nfunction* watchLogIn() {\n    yield takeEvery(\"LOG_IN_REQUEST\", logIn); //while대신에 takeEvery\n}\nfunction* watchLogOut() {\n    yield takeEvery(\"LOG_OUT_REQUEST\", logOut);\n}\nfunction* watchAddPost() {\n    yield takeEvery(\"ADD_POST_REQUEST\");\n}\nexport default function* rootSaga() {\n    yield all([fork(watchLogIn), fork(watchLogOut), fork(watchAddPost)]);\n}\n"],"mappings":"AAAA,SAASA,GAAG,EAAEC,IAAI,EAAEC,IAAI,EAAEC,GAAG,EAAEC,IAAI,EAAEC,SAAS,QAAQ,oBAAoB,CAAC,CAAC;AAC5E;AACA,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQA,CAAA,EAAG;EAChB,OAAOD,KAAK,CAACE,IAAI,CAAC,WAAW,CAAC;AAClC;AAEA,UAAUC,KAAKA,CAACC,MAAM,EAAE;EACpB,IAAI;IACA,MAAMC,MAAM,GAAG,MAAMT,IAAI,CAACK,QAAQ,EAAEG,MAAM,CAACE,IAAI,CAAC;IAChD,MAAMT,GAAG,CAAC;MACN;MACAU,IAAI,EAAE,gBAAgB;MACtBD,IAAI,EAAED,MAAM,CAACC;IACjB,CAAC,CAAC;EACN,CAAC,CAAC,OAAOE,GAAG,EAAE;IACV,MAAMX,GAAG,CAAC;MACN;MACAU,IAAI,EAAE,gBAAgB;MACtBD,IAAI,EAAEE,GAAG,CAACC,QAAQ,CAACH;IACvB,CAAC,CAAC;EACN;AACJ;AAEA,SAASI,UAAUA,CAACJ,IAAI,EAAE;EACtB,OAAON,KAAK,CAACE,IAAI,CAAC,WAAW,EAAEI,IAAI,CAAC;AACxC;AAEA,UAAUK,OAAOA,CAACP,MAAM,EAAE;EACtB,IAAI;IACA,MAAMC,MAAM,GAAG,MAAMT,IAAI,CAACc,UAAU,EAAEN,MAAM,CAACE,IAAI,CAAC;IAClD,MAAMT,GAAG,CAAC;MACN;MACAU,IAAI,EAAE,kBAAkB;MACxBD,IAAI,EAAED,MAAM,CAACC;IACjB,CAAC,CAAC;EACN,CAAC,CAAC,OAAOE,GAAG,EAAE;IACV,MAAMX,GAAG,CAAC;MACN;MACAU,IAAI,EAAE,kBAAkB;MACxBD,IAAI,EAAEE,GAAG,CAACC,QAAQ,CAACH;IACvB,CAAC,CAAC;EACN;AACJ;AAEA,UAAUM,UAAUA,CAAA,EAAG;EACnB,MAAMb,SAAS,CAAC,gBAAgB,EAAEI,KAAK,CAAC,CAAC,CAAC;AAC9C;;AACA,UAAUU,WAAWA,CAAA,EAAG;EACpB,MAAMd,SAAS,CAAC,iBAAiB,EAAEe,MAAM,CAAC;AAC9C;AACA,UAAUC,YAAYA,CAAA,EAAG;EACrB,MAAMhB,SAAS,CAAC,kBAAkB,CAAC;AACvC;AACA,eAAe,UAAUiB,QAAQA,CAAA,EAAG;EAChC,MAAMtB,GAAG,CAAC,CAACC,IAAI,CAACiB,UAAU,CAAC,EAAEjB,IAAI,CAACkB,WAAW,CAAC,EAAElB,IAAI,CAACoB,YAAY,CAAC,CAAC,CAAC;AACxE"},"metadata":{},"sourceType":"module"}