{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"/Users/ihyeoncheol/Desktop/nodebird_project/prepare/front/components/CommentForm.js\",\n  _s = $RefreshSig$();\nvar __jsx = React.createElement;\nimport { Form, Button, Input } from \"antd\";\nimport React, { useCallback, useEffect } from \"react\";\nimport useInput from \"../hooks/useInput\";\nimport PropTypes from \"prop-types\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { ADD_COMMENT_REQUEST } from \"../reducers/post\";\nvar CommentForm = function CommentForm(_ref) {\n  _s();\n  var post = _ref.post;\n  var dispatch = useDispatch();\n  var id = useSelector(function (state) {\n    var _state$user$me;\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  var _useSelector = useSelector(function (state) {\n      return state.post;\n    }),\n    addCommentDone = _useSelector.addCommentDone,\n    addCommentLoading = _useSelector.addCommentLoading;\n  var _useInput = useInput(\"\"),\n    _useInput2 = _slicedToArray(_useInput, 3),\n    commentText = _useInput2[0],\n    onChangeCommentText = _useInput2[1],\n    setCommentText = _useInput2[2];\n  useEffect(function () {\n    if (addCommentDone) {\n      setCommentText(\"\");\n    }\n  }, [addCommentDone]); //댓글 다 올라갔을 때 done응답이 오면 초기화해주기\n\n  var onSubmitComment = useCallback(function () {\n    dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: {\n        content: commentText,\n        postId: post.id,\n        userId: id\n      }\n    });\n  }, [commentText, id]); //댓글을 추가하려면 id를 통해서 해당 게시글을 찾고 그 해당하는 게시글의\n  //Comments로 이동\n  return __jsx(Form, {\n    onFinish: onSubmitComment,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, __jsx(Form.Item, {\n    style: {\n      position: \"relative\",\n      margin: 0\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, __jsx(Input.TextArea, {\n    value: commentText,\n    onChange: onChangeCommentText,\n    rows: 4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }), __jsx(Button, {\n    style: {\n      position: \"absolute\",\n      right: 0,\n      top: 105,\n      zIndex: 1\n    },\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: addCommentLoading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, \"\\uC090\\uC57D\")));\n};\n_s(CommentForm, \"TkQ1pkz5HHxeoLHkjeNQHPXXfhA=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useInput];\n});\n_c = CommentForm;\nCommentForm.propTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default CommentForm;\nvar _c;\n$RefreshReg$(_c, \"CommentForm\");","map":{"version":3,"names":["Form","Button","Input","React","useCallback","useEffect","useInput","PropTypes","useSelector","useDispatch","ADD_COMMENT_REQUEST","CommentForm","_ref","_s","post","dispatch","id","state","_state$user$me","user","me","_useSelector","addCommentDone","addCommentLoading","_useInput","_useInput2","_slicedToArray","commentText","onChangeCommentText","setCommentText","onSubmitComment","type","data","content","postId","userId","__jsx","onFinish","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","Item","style","position","margin","TextArea","value","onChange","rows","right","top","zIndex","htmlType","loading","_c","propTypes","object","isRequired","$RefreshReg$"],"sources":["/Users/ihyeoncheol/Desktop/nodebird_project/prepare/front/components/CommentForm.js"],"sourcesContent":["import { Form, Button, Input } from \"antd\";\nimport React, { useCallback, useEffect } from \"react\";\nimport useInput from \"../hooks/useInput\";\nimport PropTypes from \"prop-types\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { ADD_COMMENT_REQUEST } from \"../reducers/post\";\n\nconst CommentForm = ({ post }) => {\n    const dispatch = useDispatch();\n    const id = useSelector((state) => state.user.me?.id);\n    const { addCommentDone, addCommentLoading } = useSelector(\n        (state) => state.post\n    );\n\n    const [commentText, onChangeCommentText, setCommentText] = useInput(\"\");\n\n    useEffect(() => {\n        if (addCommentDone) {\n            setCommentText(\"\");\n        }\n    }, [addCommentDone]); //댓글 다 올라갔을 때 done응답이 오면 초기화해주기\n\n    const onSubmitComment = useCallback(() => {\n        dispatch({\n            type: ADD_COMMENT_REQUEST,\n            data: { content: commentText, postId: post.id, userId: id },\n        });\n    }, [commentText, id]); //댓글을 추가하려면 id를 통해서 해당 게시글을 찾고 그 해당하는 게시글의\n    //Comments로 이동\n    return (\n        <Form onFinish={onSubmitComment}>\n            <Form.Item style={{ position: \"relative\", margin: 0 }}>\n                <Input.TextArea\n                    value={commentText}\n                    onChange={onChangeCommentText}\n                    rows={4}\n                />\n                <Button\n                    style={{\n                        position: \"absolute\",\n                        right: 0,\n                        top: 105,\n                        zIndex: 1,\n                    }}\n                    type=\"primary\"\n                    htmlType=\"submit\"\n                    loading={addCommentLoading}\n                >\n                    삐약\n                </Button>\n            </Form.Item>\n        </Form>\n    );\n};\n\nCommentForm.propTypes = {\n    post: PropTypes.object.isRequired,\n};\n\nexport default CommentForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}