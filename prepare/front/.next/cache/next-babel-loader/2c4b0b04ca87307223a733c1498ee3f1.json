{"ast":null,"code":"import { HYDRATE } from \"next-redux-wrapper\";\nimport user from \"./user\";\nimport post from \"./post\";\nimport { combineReducers } from \"redux\";\n\n//(이전상태, 액션) => 다음 상태\nvar rootReducer = function rootReducer(state, action) {\n  switch (action.type) {\n    case HYDRATE:\n      console.log(\"HYDRATE\", action);\n      return action.payload;\n    default:\n      {\n        var combinedReducer = combineReducers({\n          user: user,\n          post: post\n        });\n        return combinedReducer(state, action);\n      }\n  }\n};\nexport default rootReducer;","map":{"version":3,"names":["HYDRATE","user","post","combineReducers","rootReducer","state","action","type","console","log","payload","combinedReducer"],"sources":["/Users/ihyeoncheol/Desktop/nodebird_project/prepare/front/reducers/index.js"],"sourcesContent":["import { HYDRATE } from \"next-redux-wrapper\";\nimport user from \"./user\";\nimport post from \"./post\";\nimport { combineReducers } from \"redux\";\n\n//(이전상태, 액션) => 다음 상태\nconst rootReducer = (state, action) => {\n    switch (action.type) {\n        case HYDRATE:\n            console.log(\"HYDRATE\", action);\n            return action.payload;\n        default: {\n            const combinedReducer = combineReducers({\n                user,\n                post,\n            });\n            return combinedReducer(state, action);\n        }\n    }\n};\nexport default rootReducer;\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,oBAAoB;AAC5C,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,IAAI,MAAM,QAAQ;AACzB,SAASC,eAAe,QAAQ,OAAO;;AAEvC;AACA,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAIC,KAAK,EAAEC,MAAM,EAAK;EACnC,QAAQA,MAAM,CAACC,IAAI;IACf,KAAKP,OAAO;MACRQ,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEH,MAAM,CAAC;MAC9B,OAAOA,MAAM,CAACI,OAAO;IACzB;MAAS;QACL,IAAMC,eAAe,GAAGR,eAAe,CAAC;UACpCF,IAAI,EAAJA,IAAI;UACJC,IAAI,EAAJA;QACJ,CAAC,CAAC;QACF,OAAOS,eAAe,CAACN,KAAK,EAAEC,MAAM,CAAC;MACzC;EACJ;AACJ,CAAC;AACD,eAAeF,WAAW"},"metadata":{},"sourceType":"module"}