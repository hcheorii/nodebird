{"ast":null,"code":"var _jsxFileName = \"/Users/ihyeoncheol/Desktop/nodebird_project/prepare/front/pages/profile.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from \"react\";\nimport AppLayout from \"../components/AppLayout\";\nimport Head from \"next/head\";\nimport FollowList from \"../components/FollowList\";\nimport NicknameEditForm from \"../components/NicknameEditForm\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Router from \"next/router\";\nconst Profile = () => {\n  const dispatch = useDispatch();\n  const {\n    me\n  } = useSelector(state => state.user); //로그인한 내 정보 가져오기\n\n  useEffect(() => {\n    dispatch({\n      type: LOAD_FOLLOWERS_REQUEST\n    });\n    dispatch({\n      type: LOAD_FOLLOWERS_REQUEST\n    });\n  }, []);\n  useEffect(() => {\n    if (!(me && me.id)) {\n      Router.push(\"/\");\n    }\n  }, [me && me.id]); //로그인하지 않고 프로필 눌렀을때 홈으로 이동\n  if (!me) {\n    return null;\n  }\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, \"\\uB0B4 \\uD504\\uB85C\\uD544 | NodeBird\")), __jsx(AppLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, __jsx(NicknameEditForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }), __jsx(FollowList, {\n    header: \"\\uD314\\uB85C\\uC789\",\n    data: me.Followings,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }), __jsx(FollowList, {\n    header: \"\\uD314\\uB85C\\uC6CC\",\n    data: me.Followers,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  })));\n};\nexport default Profile;","map":{"version":3,"names":["React","useEffect","AppLayout","Head","FollowList","NicknameEditForm","useSelector","useDispatch","Router","Profile","dispatch","me","state","user","type","LOAD_FOLLOWERS_REQUEST","id","push","__jsx","Fragment","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","header","data","Followings","Followers"],"sources":["/Users/ihyeoncheol/Desktop/nodebird_project/prepare/front/pages/profile.js"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport AppLayout from \"../components/AppLayout\";\nimport Head from \"next/head\";\nimport FollowList from \"../components/FollowList\";\nimport NicknameEditForm from \"../components/NicknameEditForm\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Router from \"next/router\";\n\nconst Profile = () => {\n    const dispatch = useDispatch();\n    const { me } = useSelector((state) => state.user); //로그인한 내 정보 가져오기\n\n    useEffect(() => {\n        dispatch({\n            type: LOAD_FOLLOWERS_REQUEST,\n        });\n        dispatch({\n            type: LOAD_FOLLOWERS_REQUEST,\n        });\n    }, []);\n\n    useEffect(() => {\n        if (!(me && me.id)) {\n            Router.push(\"/\");\n        }\n    }, [me && me.id]); //로그인하지 않고 프로필 눌렀을때 홈으로 이동\n    if (!me) {\n        return null;\n    }\n\n    return (\n        <>\n            <Head>\n                <title>내 프로필 | NodeBird</title>\n            </Head>\n            <AppLayout>\n                <NicknameEditForm />\n                <FollowList header=\"팔로잉\" data={me.Followings} />\n                <FollowList header=\"팔로워\" data={me.Followers} />\n            </AppLayout>\n        </>\n    );\n};\n\nexport default Profile;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,IAAI,MAAM,WAAW;AAC5B,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,gBAAgB,MAAM,gCAAgC;AAC7D,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAOC,MAAM,MAAM,aAAa;AAEhC,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAClB,MAAMC,QAAQ,GAAGH,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEI;EAAG,CAAC,GAAGL,WAAW,CAAEM,KAAK,IAAKA,KAAK,CAACC,IAAI,CAAC,CAAC,CAAC;;EAEnDZ,SAAS,CAAC,MAAM;IACZS,QAAQ,CAAC;MACLI,IAAI,EAAEC;IACV,CAAC,CAAC;IACFL,QAAQ,CAAC;MACLI,IAAI,EAAEC;IACV,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAENd,SAAS,CAAC,MAAM;IACZ,IAAI,EAAEU,EAAE,IAAIA,EAAE,CAACK,EAAE,CAAC,EAAE;MAChBR,MAAM,CAACS,IAAI,CAAC,GAAG,CAAC;IACpB;EACJ,CAAC,EAAE,CAACN,EAAE,IAAIA,EAAE,CAACK,EAAE,CAAC,CAAC,CAAC,CAAC;EACnB,IAAI,CAACL,EAAE,EAAE;IACL,OAAO,IAAI;EACf;EAEA,OACIO,KAAA,CAAAlB,KAAA,CAAAmB,QAAA,QACID,KAAA,CAACf,IAAI;IAAAiB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACDP,KAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,yCAA8B,CAC5B,CAAC,EACPP,KAAA,CAAChB,SAAS;IAAAkB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACNP,KAAA,CAACb,gBAAgB;IAAAe,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,EACpBP,KAAA,CAACd,UAAU;IAACsB,MAAM,EAAC,oBAAK;IAACC,IAAI,EAAEhB,EAAE,CAACiB,UAAW;IAAAR,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,EAChDP,KAAA,CAACd,UAAU;IAACsB,MAAM,EAAC,oBAAK;IAACC,IAAI,EAAEhB,EAAE,CAACkB,SAAU;IAAAT,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CACvC,CACb,CAAC;AAEX,CAAC;AAED,eAAehB,OAAO"},"metadata":{},"sourceType":"module"}