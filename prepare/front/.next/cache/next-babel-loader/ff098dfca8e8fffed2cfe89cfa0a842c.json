{"ast":null,"code":"var _this = this,\n  _jsxFileName = \"/Users/ihyeoncheol/Desktop/nodebird_project/prepare/front/pages/index.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport AppLayout from \"../components/AppLayout\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport PostCard from \"../components/PostCard\";\nimport PostForm from \"../components/PostForm\";\nimport { useEffect } from \"react\";\nimport { LOAD_POSTS_REQUEST } from \"../reducers/post\";\nimport { LOAD_MY_INFO_REQUEST } from \"../reducers/user\";\nvar Home = function Home() {\n  _s();\n  var dispatch = useDispatch();\n  var _useSelector = useSelector(function (state) {\n      return state.user;\n    }),\n    me = _useSelector.me;\n  var _useSelector2 = useSelector(function (state) {\n      return state.post;\n    }),\n    mainPosts = _useSelector2.mainPosts,\n    hasMorePost = _useSelector2.hasMorePost,\n    loadPostsLoading = _useSelector2.loadPostsLoading,\n    retweetError = _useSelector2.retweetError;\n  useEffect(function () {\n    if (retweetError) {\n      alert(retweetError);\n    }\n  }, [retweetError]);\n  useEffect(function () {\n    dispatch({\n      type: LOAD_MY_INFO_REQUEST //유저정보 가져오기\n    });\n\n    dispatch({\n      type: LOAD_POSTS_REQUEST //게시물 불러오기\n    });\n  }, []);\n  useEffect(function () {\n    function onScroll() {\n      if (\n      //만약 스크롤을 끝에서 -300까지 다 내렸으면\n      window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n        if (hasMorePost && !loadPostsLoading) {\n          var _mainPosts;\n          //로딩중이지 않을때만 딱 한번\n          var lastId = (_mainPosts = mainPosts[mainPosts.length - 1]) === null || _mainPosts === void 0 ? void 0 : _mainPosts.id;\n          dispatch({\n            //새로운거 불러와라\n            type: LOAD_POSTS_REQUEST,\n            lastId: lastId\n          });\n        }\n      }\n    }\n    window.addEventListener(\"scroll\", onScroll); //스크롤 할때마다 발생하는 이벤트\n    return function () {\n      window.removeEventListener(\"scroll\", onScroll);\n    };\n  }, [hasMorePost, loadPostsLoading, mainPosts]);\n  return __jsx(AppLayout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, me && __jsx(PostForm, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 20\n    }\n  }), mainPosts.map(function (post) {\n    return __jsx(PostCard, {\n      key: post.id,\n      post: post,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    })\n    //PostCard에 포스트 데이터 보내주기\n    ;\n  }));\n};\n_s(Home, \"EMVQlL/MM7sbyGy/md6UME74XdE=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = Home;\n//이  부분이  무조건 home보다 먼저 실행된다.\nexport var __N_SSP = true;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["AppLayout","useSelector","useDispatch","PostCard","PostForm","useEffect","LOAD_POSTS_REQUEST","LOAD_MY_INFO_REQUEST","Home","_s","dispatch","_useSelector","state","user","me","_useSelector2","post","mainPosts","hasMorePost","loadPostsLoading","retweetError","alert","type","onScroll","window","scrollY","document","documentElement","clientHeight","scrollHeight","_mainPosts","lastId","length","id","addEventListener","removeEventListener","__jsx","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","map","key","_c","__N_SSP","$RefreshReg$"],"sources":["/Users/ihyeoncheol/Desktop/nodebird_project/prepare/front/pages/index.js"],"sourcesContent":["import AppLayout from \"../components/AppLayout\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport PostCard from \"../components/PostCard\";\nimport PostForm from \"../components/PostForm\";\nimport { useEffect } from \"react\";\nimport { LOAD_POSTS_REQUEST } from \"../reducers/post\";\nimport { LOAD_MY_INFO_REQUEST } from \"../reducers/user\";\nimport wrapper from \"../store/configureStore\";\nconst Home = () => {\n    const dispatch = useDispatch();\n    const { me } = useSelector((state) => state.user);\n    const { mainPosts, hasMorePost, loadPostsLoading, retweetError } =\n        useSelector((state) => state.post);\n    useEffect(() => {\n        if (retweetError) {\n            alert(retweetError);\n        }\n    }, [retweetError]);\n    useEffect(() => {\n        dispatch({\n            type: LOAD_MY_INFO_REQUEST, //유저정보 가져오기\n        });\n        dispatch({\n            type: LOAD_POSTS_REQUEST, //게시물 불러오기\n        });\n    }, []);\n\n    useEffect(() => {\n        function onScroll() {\n            if (\n                //만약 스크롤을 끝에서 -300까지 다 내렸으면\n                window.scrollY + document.documentElement.clientHeight >\n                document.documentElement.scrollHeight - 300\n            ) {\n                if (hasMorePost && !loadPostsLoading) {\n                    //로딩중이지 않을때만 딱 한번\n                    const lastId = mainPosts[mainPosts.length - 1]?.id;\n                    dispatch({\n                        //새로운거 불러와라\n                        type: LOAD_POSTS_REQUEST,\n                        lastId,\n                    });\n                }\n            }\n        }\n        window.addEventListener(\"scroll\", onScroll); //스크롤 할때마다 발생하는 이벤트\n        return () => {\n            window.removeEventListener(\"scroll\", onScroll);\n        };\n    }, [hasMorePost, loadPostsLoading, mainPosts]);\n\n    return (\n        <AppLayout>\n            {me && <PostForm />}\n            {mainPosts.map((post) => (\n                <PostCard key={post.id} post={post} />\n                //PostCard에 포스트 데이터 보내주기\n            ))}\n        </AppLayout>\n    );\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps((context) => {}); //이  부분이  무조건 home보다 먼저 실행된다.\nexport default Home;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}