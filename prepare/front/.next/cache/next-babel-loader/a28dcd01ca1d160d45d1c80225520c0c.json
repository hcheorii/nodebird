{"ast":null,"code":"import { all, fork, put } from \"redux-saga/effects\";\nimport { takeLatest } from \"redux-saga/effects\";\nimport { ADD_POST_FAILURE, ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_COMMENT_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS } from \"../reducers/post\";\nfunction addPostAPI() {\n  return axios.post(\"/api/post\");\n}\nfunction* addPost(action) {\n  try {\n    const result = yield call(addPostAPI, action.data); //로그인 요청에 대해 결과값으로 받을 수 있다.\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    put({\n      type: ADD_POST_FAILURE,\n      data: err.response.data\n    });\n  }\n}\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\nfunction addCommentAPI(data) {\n  return axios.post(`/api/post/${data.postId}/comment`, data);\n}\nfunction* addComment(action) {\n  try {\n    const result = yield call(addCommentAPI, action.data); //로그인 요청에 대해 결과값으로 받을 수 있다.\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    put({\n      type: ADD_COMMENT_FAILURE,\n      data: err.response.data\n    });\n  }\n}\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchAddComment)]);\n}","map":{"version":3,"names":["all","fork","put","takeLatest","ADD_POST_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_COMMENT_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","addPostAPI","axios","post","addPost","action","result","call","data","type","err","response","watchAddPost","addCommentAPI","postId","addComment","watchAddComment","postSaga"],"sources":["/Users/ihyeoncheol/Desktop/nodebird_project/prepare/front/sagas/post.js"],"sourcesContent":["import { all, fork, put } from \"redux-saga/effects\";\nimport { takeLatest } from \"redux-saga/effects\";\nimport {\n    ADD_POST_FAILURE,\n    ADD_POST_REQUEST,\n    ADD_POST_SUCCESS,\n    ADD_COMMENT_FAILURE,\n    ADD_COMMENT_REQUEST,\n    ADD_COMMENT_SUCCESS,\n} from \"../reducers/post\";\nfunction addPostAPI() {\n    return axios.post(\"/api/post\");\n}\n\nfunction* addPost(action) {\n    try {\n        const result = yield call(addPostAPI, action.data); //로그인 요청에 대해 결과값으로 받을 수 있다.\n        yield put({ type: ADD_POST_SUCCESS, data: result.data });\n    } catch (err) {\n        put({ type: ADD_POST_FAILURE, data: err.response.data });\n    }\n}\n\nfunction* watchAddPost() {\n    yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction addCommentAPI(data) {\n    return axios.post(`/api/post/${data.postId}/comment`, data);\n}\n\nfunction* addComment(action) {\n    try {\n        const result = yield call(addCommentAPI, action.data); //로그인 요청에 대해 결과값으로 받을 수 있다.\n        yield put({ type: ADD_COMMENT_SUCCESS, data: result.data });\n    } catch (err) {\n        put({ type: ADD_COMMENT_FAILURE, data: err.response.data });\n    }\n}\n\nfunction* watchAddComment() {\n    yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\nexport default function* postSaga() {\n    yield all([fork(watchAddPost), fork(watchAddComment)]);\n}\n"],"mappings":"AAAA,SAASA,GAAG,EAAEC,IAAI,EAAEC,GAAG,QAAQ,oBAAoB;AACnD,SAASC,UAAU,QAAQ,oBAAoB;AAC/C,SACIC,gBAAgB,EAChBC,gBAAgB,EAChBC,gBAAgB,EAChBC,mBAAmB,EACnBC,mBAAmB,EACnBC,mBAAmB,QAChB,kBAAkB;AACzB,SAASC,UAAUA,CAAA,EAAG;EAClB,OAAOC,KAAK,CAACC,IAAI,CAAC,WAAW,CAAC;AAClC;AAEA,UAAUC,OAAOA,CAACC,MAAM,EAAE;EACtB,IAAI;IACA,MAAMC,MAAM,GAAG,MAAMC,IAAI,CAACN,UAAU,EAAEI,MAAM,CAACG,IAAI,CAAC,CAAC,CAAC;IACpD,MAAMf,GAAG,CAAC;MAAEgB,IAAI,EAAEZ,gBAAgB;MAAEW,IAAI,EAAEF,MAAM,CAACE;IAAK,CAAC,CAAC;EAC5D,CAAC,CAAC,OAAOE,GAAG,EAAE;IACVjB,GAAG,CAAC;MAAEgB,IAAI,EAAEd,gBAAgB;MAAEa,IAAI,EAAEE,GAAG,CAACC,QAAQ,CAACH;IAAK,CAAC,CAAC;EAC5D;AACJ;AAEA,UAAUI,YAAYA,CAAA,EAAG;EACrB,MAAMlB,UAAU,CAACE,gBAAgB,EAAEQ,OAAO,CAAC;AAC/C;AAEA,SAASS,aAAaA,CAACL,IAAI,EAAE;EACzB,OAAON,KAAK,CAACC,IAAI,CAAE,aAAYK,IAAI,CAACM,MAAO,UAAS,EAAEN,IAAI,CAAC;AAC/D;AAEA,UAAUO,UAAUA,CAACV,MAAM,EAAE;EACzB,IAAI;IACA,MAAMC,MAAM,GAAG,MAAMC,IAAI,CAACM,aAAa,EAAER,MAAM,CAACG,IAAI,CAAC,CAAC,CAAC;IACvD,MAAMf,GAAG,CAAC;MAAEgB,IAAI,EAAET,mBAAmB;MAAEQ,IAAI,EAAEF,MAAM,CAACE;IAAK,CAAC,CAAC;EAC/D,CAAC,CAAC,OAAOE,GAAG,EAAE;IACVjB,GAAG,CAAC;MAAEgB,IAAI,EAAEX,mBAAmB;MAAEU,IAAI,EAAEE,GAAG,CAACC,QAAQ,CAACH;IAAK,CAAC,CAAC;EAC/D;AACJ;AAEA,UAAUQ,eAAeA,CAAA,EAAG;EACxB,MAAMtB,UAAU,CAACK,mBAAmB,EAAEgB,UAAU,CAAC;AACrD;AACA,eAAe,UAAUE,QAAQA,CAAA,EAAG;EAChC,MAAM1B,GAAG,CAAC,CAACC,IAAI,CAACoB,YAAY,CAAC,EAAEpB,IAAI,CAACwB,eAAe,CAAC,CAAC,CAAC;AAC1D"},"metadata":{},"sourceType":"module"}