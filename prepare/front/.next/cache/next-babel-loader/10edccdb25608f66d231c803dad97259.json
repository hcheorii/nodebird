{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"/Users/ihyeoncheol/Desktop/nodebird_project/prepare/front/components/CommentForm.js\",\n  _s = $RefreshSig$();\nvar __jsx = React.createElement;\nimport { Form, Button, Input } from \"antd\";\nimport React, { useCallback, useState } from \"react\";\nimport useInput from \"../hooks/useInput\";\nimport PropTypes from \"prop-types\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { ADD_COMMENT_REQUEST } from \"../reducers/post\";\nvar CommentForm = function CommentForm(_ref) {\n  _s();\n  var post = _ref.post;\n  var dispatch = useDispatch();\n  var id = useSelector(function (state) {\n    var _state$user$me;\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  var _useSelector = useSelector(function (state) {\n      return state.post;\n    }),\n    addCommentDone = _useSelector.addCommentDone;\n  var _useInput = useInput(\"\"),\n    _useInput2 = _slicedToArray(_useInput, 3),\n    commentText = _useInput2[0],\n    onChangeCommentText = _useInput2[1],\n    setCommentText = _useInput2[2];\n  useEffect(function () {\n    if (addCommentDone) {\n      setCommentText(\"\");\n    }\n  }, [addCommentDone]);\n  var onSubmitComment = useCallback(function () {\n    console.log(post.id, commentText);\n    dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: {\n        content: commentText,\n        postId: post.id,\n        userId: id\n      }\n    });\n  }, [commentText, id]);\n  return __jsx(Form, {\n    onFinish: onSubmitComment,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, __jsx(Form.Item, {\n    style: {\n      position: \"relative\",\n      margin: 0\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, __jsx(Input.TextArea, {\n    value: commentText,\n    onChange: onChangeCommentText,\n    rows: 4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }), __jsx(Button, {\n    style: {\n      position: \"absolute\",\n      right: 0,\n      top: 105\n    },\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, \"\\uC090\\uC57D\")));\n};\n_s(CommentForm, \"mM6CS628luhUq9CAqU3Lfmbq6g4=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useInput];\n});\n_c = CommentForm;\nCommentForm.propTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default CommentForm;\nvar _c;\n$RefreshReg$(_c, \"CommentForm\");","map":{"version":3,"names":["Form","Button","Input","React","useCallback","useState","useInput","PropTypes","useSelector","useDispatch","ADD_COMMENT_REQUEST","CommentForm","_ref","_s","post","dispatch","id","state","_state$user$me","user","me","_useSelector","addCommentDone","_useInput","_useInput2","_slicedToArray","commentText","onChangeCommentText","setCommentText","useEffect","onSubmitComment","console","log","type","data","content","postId","userId","__jsx","onFinish","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","Item","style","position","margin","TextArea","value","onChange","rows","right","top","htmlType","_c","propTypes","object","isRequired","$RefreshReg$"],"sources":["/Users/ihyeoncheol/Desktop/nodebird_project/prepare/front/components/CommentForm.js"],"sourcesContent":["import { Form, Button, Input } from \"antd\";\nimport React, { useCallback, useState } from \"react\";\nimport useInput from \"../hooks/useInput\";\nimport PropTypes from \"prop-types\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { ADD_COMMENT_REQUEST } from \"../reducers/post\";\n\nconst CommentForm = ({ post }) => {\n    const dispatch = useDispatch();\n    const id = useSelector((state) => state.user.me?.id);\n    const { addCommentDone } = useSelector((state) => state.post);\n\n    const [commentText, onChangeCommentText, setCommentText] = useInput(\"\");\n\n    useEffect(() => {\n        if (addCommentDone) {\n            setCommentText(\"\");\n        }\n    }, [addCommentDone]);\n\n    const onSubmitComment = useCallback(() => {\n        console.log(post.id, commentText);\n        dispatch({\n            type: ADD_COMMENT_REQUEST,\n            data: { content: commentText, postId: post.id, userId: id },\n        });\n    }, [commentText, id]);\n    return (\n        <Form onFinish={onSubmitComment}>\n            <Form.Item style={{ position: \"relative\", margin: 0 }}>\n                <Input.TextArea\n                    value={commentText}\n                    onChange={onChangeCommentText}\n                    rows={4}\n                />\n                <Button\n                    style={{ position: \"absolute\", right: 0, top: 105 }}\n                    type=\"primary\"\n                    htmlType=\"submit\"\n                >\n                    삐약\n                </Button>\n            </Form.Item>\n        </Form>\n    );\n};\n\nCommentForm.propTypes = {\n    post: PropTypes.object.isRequired,\n};\n\nexport default CommentForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}