{"ast":null,"code":"import { createWrapper } from \"next-redux-wrapper\";\nimport reducer from \"../reducers\";\nimport { createStore, compose, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nvar loggerMiddleware = function loggerMiddleware(_ref) {\n  var dispatch = _ref.dispatch,\n    getState = _ref.getState;\n  return function (next) {\n    return function (action) {\n      if (typeof action === \"function\") {\n        return action(dispatch, getState);\n      }\n      return next(action);\n    };\n  };\n};\nvar configureStore = function configureStore() {\n  var middlewares = [loggerMiddleware];\n  var enhancer = false ? compose(applyMiddleware.apply(void 0, middlewares)) //배포용\n  : composeWithDevTools(applyMiddleware.apply(void 0, middlewares)); //개발용\n  var store = createStore(reducer, enhancer);\n  store.dispatch({\n    type: \"CHANGE_NICKNAME\",\n    data: \"tuk\"\n  });\n  return store;\n};\nvar wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"names":["createWrapper","reducer","createStore","compose","applyMiddleware","composeWithDevTools","loggerMiddleware","_ref","dispatch","getState","next","action","configureStore","middlewares","enhancer","apply","store","type","data","wrapper","debug"],"sources":["/Users/ihyeoncheol/Desktop/nodebird_project/prepare/front/store/configureStore.js"],"sourcesContent":["import { createWrapper } from \"next-redux-wrapper\";\nimport reducer from \"../reducers\";\nimport { createStore, compose, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nconst loggerMiddleware =\n    ({ dispatch, getState }) =>\n    (next) =>\n    (action) => {\n        if (typeof action === \"function\") {\n            return action(dispatch, getState);\n        }\n        return next(action);\n    };\nconst configureStore = () => {\n    const middlewares = [loggerMiddleware];\n    const enhancer =\n        process.env.NODE_ENV === \"production\"\n            ? compose(applyMiddleware(...middlewares)) //배포용\n            : composeWithDevTools(applyMiddleware(...middlewares)); //개발용\n    const store = createStore(reducer, enhancer);\n    store.dispatch({\n        type: \"CHANGE_NICKNAME\",\n        data: \"tuk\",\n    });\n    return store;\n};\n\nconst wrapper = createWrapper(configureStore, {\n    debug: process.env.NODE_ENV === \"development\",\n});\nexport default wrapper;\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,oBAAoB;AAClD,OAAOC,OAAO,MAAM,aAAa;AACjC,SAASC,WAAW,EAAEC,OAAO,EAAEC,eAAe,QAAQ,OAAO;AAC7D,SAASC,mBAAmB,QAAQ,0BAA0B;AAE9D,IAAMC,gBAAgB,GAClB,SADEA,gBAAgBA,CAAAC,IAAA;EAAA,IACfC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;IAAEC,QAAQ,GAAAF,IAAA,CAARE,QAAQ;EAAA,OACrB,UAACC,IAAI;IAAA,OACL,UAACC,MAAM,EAAK;MACR,IAAI,OAAOA,MAAM,KAAK,UAAU,EAAE;QAC9B,OAAOA,MAAM,CAACH,QAAQ,EAAEC,QAAQ,CAAC;MACrC;MACA,OAAOC,IAAI,CAACC,MAAM,CAAC;IACvB,CAAC;EAAA;AAAA;AACL,IAAMC,cAAc,GAAG,SAAjBA,cAAcA,CAAA,EAAS;EACzB,IAAMC,WAAW,GAAG,CAACP,gBAAgB,CAAC;EACtC,IAAMQ,QAAQ,GACV,QACMX,OAAO,CAACC,eAAe,CAAAW,KAAA,SAAIF,WAAW,CAAC,CAAC,CAAC;EAAA,EACzCR,mBAAmB,CAACD,eAAe,CAAAW,KAAA,SAAIF,WAAW,CAAC,CAAC,CAAC,CAAC;EAChE,IAAMG,KAAK,GAAGd,WAAW,CAACD,OAAO,EAAEa,QAAQ,CAAC;EAC5CE,KAAK,CAACR,QAAQ,CAAC;IACXS,IAAI,EAAE,iBAAiB;IACvBC,IAAI,EAAE;EACV,CAAC,CAAC;EACF,OAAOF,KAAK;AAChB,CAAC;AAED,IAAMG,OAAO,GAAGnB,aAAa,CAACY,cAAc,EAAE;EAC1CQ,KAAK;AACT,CAAC,CAAC;AACF,eAAeD,OAAO"},"metadata":{},"sourceType":"module"}